<%- include("../../views/partials/user/header") %>

<title>Checkout | Electro Store</title>

<style>
  :root {
    --primary: #D10024;
    --primary-dark: #B80020;
    --primary-light: #FFE6EA;
    --dark: #15161D;
    --light: #F8F9FA;
    --gray: #E4E7ED;
    --gray-dark: #8D99AE;
    --success: #28a745;
    --warning: #ffc107;
    --danger: #dc3545;
    --shadow: 0 2px 10px rgba(0, 0, 0, 0.08);
    --radius: 4px;
    --transition: all 0.3s ease;
  }

  .checkout-container {
    max-width: 1200px;
    margin: 30px auto;
    padding: 0 15px;
  }

  .checkout-header {
    text-align: center;
    margin-bottom: 40px;
    padding: 20px 0;
    border-bottom: 1px solid var(--gray);
  }

  .checkout-title {
    font-size: 32px;
    font-weight: 700;
    color: var(--dark);
    margin-bottom: 10px;
    text-transform: uppercase;
    letter-spacing: 1px;
  }

  .checkout-steps {
    display: flex;
    justify-content: center;
    margin-bottom: 40px;
    gap: 40px;
  }

  .step {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 10px;
  }

  .step-number {
    width: 40px;
    height: 40px;
    border-radius: 50%;
    background: var(--gray);
    color: white;
    display: flex;
    align-items: center;
    justify-content: center;
    font-weight: 600;
    font-size: 18px;
  }

  .step.active .step-number {
    background: var(--primary);
  }

  .step-label {
    font-size: 14px;
    font-weight: 600;
    color: var(--gray-dark);
  }

  .step.active .step-label {
    color: var(--primary);
  }

  .checkout-content {
    display: grid;
    grid-template-columns: 1fr 400px;
    gap: 30px;
  }

  @media (max-width: 992px) {
    .checkout-content {
      grid-template-columns: 1fr;
    }
  }

  .checkout-form-section {
    background: white;
    border-radius: var(--radius);
    box-shadow: var(--shadow);
    padding: 30px;
  }

  .section-title {
    font-size: 20px;
    font-weight: 700;
    margin-bottom: 20px;
    color: var(--dark);
    border-bottom: 2px solid var(--primary);
    padding-bottom: 10px;
  }

  .form-group {
    margin-bottom: 20px;
  }

  .form-row {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 15px;
  }

  @media (max-width: 768px) {
    .form-row {
      grid-template-columns: 1fr;
    }
  }

  .form-label {
    display: block;
    margin-bottom: 5px;
    font-weight: 600;
    color: var(--dark);
  }

  .form-input {
    width: 100%;
    padding: 12px 15px;
    border: 1px solid var(--gray);
    border-radius: var(--radius);
    font-size: 14px;
    transition: var(--transition);
  }

  .form-input:focus {
    outline: none;
    border-color: var(--primary);
    box-shadow: 0 0 0 2px var(--primary-light);
  }

  .payment-methods {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
    gap: 15px;
    margin-top: 20px;
  }

  .payment-method {
    border: 2px solid var(--gray);
    border-radius: var(--radius);
    padding: 15px;
    text-align: center;
    cursor: pointer;
    transition: var(--transition);
  }

  .payment-method:hover {
    border-color: var(--primary);
  }

  .payment-method.selected {
    border-color: var(--primary);
    background: var(--primary-light);
  }

  .payment-method i {
    font-size: 24px;
    margin-bottom: 10px;
    color: var(--gray-dark);
  }

  .payment-method.selected i {
    color: var(--primary);
  }

  .order-summary {
    background: white;
    border-radius: var(--radius);
    box-shadow: var(--shadow);
    padding: 25px;
    position: sticky;
    top: 20px;
    height: fit-content;
  }

  .order-items {
    max-height: 300px;
    overflow-y: auto;
    margin-bottom: 20px;
  }

  .order-item {
    display: flex;
    gap: 15px;
    padding: 15px 0;
    border-bottom: 1px solid var(--gray);
  }

  .order-item:last-child {
    border-bottom: none;
  }

  .order-item-image {
    width: 60px;
    height: 60px;
    object-fit: cover;
    border-radius: var(--radius);
    border: 1px solid var(--gray);
  }

  .order-item-details {
    flex: 1;
  }

  .order-item-name {
    font-weight: 600;
    margin-bottom: 5px;
    font-size: 14px;
  }

  .order-item-price {
    color: var(--primary);
    font-weight: 600;
  }

  .order-item-quantity {
    color: var(--gray-dark);
    font-size: 12px;
  }

  .summary-totals {
    border-top: 1px solid var(--gray);
    padding-top: 20px;
  }

  .summary-row {
    display: flex;
    justify-content: space-between;
    margin-bottom: 10px;
  }

  .summary-total {
    font-size: 18px;
    font-weight: 700;
    color: var(--primary);
    border-top: 1px dashed var(--gray);
    padding-top: 10px;
    margin-top: 10px;
  }

  .place-order-btn {
    width: 100%;
    padding: 15px;
    background: var(--primary);
    color: white;
    border: none;
    border-radius: var(--radius);
    font-weight: 600;
    font-size: 16px;
    text-transform: uppercase;
    cursor: pointer;
    transition: var(--transition);
    margin-top: 20px;
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 10px;
  }

  .place-order-btn:hover:not(:disabled) {
    background: var(--primary-dark);
    transform: translateY(-2px);
  }

  .place-order-btn:disabled {
    opacity: 0.6;
    cursor: not-allowed;
  }

  .loading-spinner {
    display: inline-block;
    width: 16px;
    height: 16px;
    border: 2px solid #ffffff;
    border-radius: 50%;
    border-top-color: transparent;
    animation: spin 0.8s linear infinite;
  }

  @keyframes spin {
    to { transform: rotate(360deg); }
  }

  .notification {
    position: fixed;
    top: 20px;
    right: 20px;
    padding: 15px 20px;
    border-radius: var(--radius);
    box-shadow: var(--shadow);
    display: flex;
    align-items: center;
    gap: 10px;
    z-index: 1000;
    max-width: 350px;
    animation: slideIn 0.3s ease;
  }

  .notification.success {
    background: #d4edda;
    color: #155724;
    border-left: 4px solid var(--success);
  }

  .notification.error {
    background: #f8d7da;
    color: #721c24;
    border-left: 4px solid var(--danger);
  }

  @keyframes slideIn {
    from {
      transform: translateX(100%);
      opacity: 0;
    }
    to {
      transform: translateX(0);
      opacity: 1;
    }
  }
</style>

<div class="checkout-container">
  <div class="checkout-header">
    <h1 class="checkout-title">Checkout</h1>
    <p>Complete your purchase securely</p>
  </div>

  <div class="checkout-steps">
    <div class="step active">
      <div class="step-number">1</div>
      <div class="step-label">Shipping</div>
    </div>
    <div class="step">
      <div class="step-number">2</div>
      <div class="step-label">Payment</div>
    </div>
    <div class="step">
      <div class="step-number">3</div>
      <div class="step-label">Confirmation</div>
    </div>
  </div>

  <form id="checkoutForm" class="checkout-content">
    <div class="checkout-form-section">
      <h2 class="section-title">Shipping Information</h2>
      
      <div class="form-row">
        <div class="form-group">
          <label class="form-label">First Name *</label>
          <input type="text" name="firstName" class="form-input" required 
                 value="<%= user ? user.firstName : '' %>">
        </div>
        <div class="form-group">
          <label class="form-label">Last Name *</label>
          <input type="text" name="lastName" class="form-input" required
                 value="<%= user ? user.lastName : '' %>">
        </div>
      </div>

      <div class="form-row">
        <div class="form-group">
          <label class="form-label">Email Address *</label>
          <input type="email" name="email" class="form-input" required
                 value="<%= user ? user.email : '' %>">
        </div>
        <div class="form-group">
          <label class="form-label">Phone Number *</label>
          <input type="tel" name="phone" class="form-input" required
                 value="<%= user ? user.phone : '' %>">
        </div>
      </div>

      <div class="form-group">
        <label class="form-label">Address *</label>
        <textarea name="address" class="form-input" rows="3" required 
                  placeholder="Enter your complete address"></textarea>
      </div>

      <div class="form-row">
        <div class="form-group">
          <label class="form-label">City *</label>
          <input type="text" name="city" class="form-input" required>
        </div>
        <div class="form-group">
          <label class="form-label">State *</label>
          <input type="text" name="state" class="form-input" required>
        </div>
        <div class="form-group">
          <label class="form-label">PIN Code *</label>
          <input type="text" name="pincode" class="form-input" required maxlength="6">
        </div>
      </div>

      <h2 class="section-title" style="margin-top: 30px;">Payment Method</h2>
      
      <div class="payment-methods">
        <div class="payment-method" data-method="cod">
          <i class="fas fa-money-bill-wave"></i>
          <div>Cash on Delivery</div>
        </div>
        <div class="payment-method" data-method="credit_card">
          <i class="fas fa-credit-card"></i>
          <div>Credit Card</div>
        </div>
        <div class="payment-method" data-method="debit_card">
          <i class="fas fa-credit-card"></i>
          <div>Debit Card</div>
        </div>
        <div class="payment-method" data-method="upi">
          <i class="fas fa-mobile-alt"></i>
          <div>UPI</div>
        </div>
      </div>
      <input type="hidden" name="paymentMethod" id="paymentMethod" required>
    </div>

    <div class="order-summary">
      <h2 class="section-title">Order Summary</h2>
      
      <div class="order-items">
        <% cart.items.forEach(item => { %>
          <div class="order-item">
            <img src="<%= item.productId.productImage?.[0]?.url || '/img/placeholder.jpg' %>" 
                 alt="<%= item.productId.productName %>" 
                 class="order-item-image"
                 onerror="this.src='/img/placeholder.jpg'">
            <div class="order-item-details">
              <div class="order-item-name"><%= item.productId.productName %></div>
              <div class="order-item-price">₹<%= item.price.toLocaleString() %></div>
              <div class="order-item-quantity">Qty: <%= item.quantity %></div>
            </div>
          </div>
        <% }) %>
      </div>

      <div class="summary-totals">
        <div class="summary-row">
          <span>Subtotal (<%= cart.items.reduce((sum, item) => sum + item.quantity, 0) %> items)</span>
          <span>₹<%= cart.cartTotal.toLocaleString() %></span>
        </div>
        <div class="summary-row">
          <span>Shipping</span>
          <span><%= cart.shippingCharge === 0 ? 'FREE' : '₹' + cart.shippingCharge %></span>
        </div>
        <div class="summary-row">
          <span>Discount</span>
          <span>-₹<%= cart.discount.toLocaleString() %></span>
        </div>
        <div class="summary-row summary-total">
          <span>Total Amount</span>
          <span>₹<%= cart.finalTotal.toLocaleString() %></span>
        </div>
      </div>

      <button type="submit" class="place-order-btn" id="placeOrderBtn">
        <i class="fas fa-lock"></i> Place Order
      </button>
    </div>
  </form>
</div>

<script>
  class CheckoutManager {
    constructor() {
      this.init();
    }

    init() {
      this.setupPaymentMethods();
      this.setupFormSubmission();
    }

    setupPaymentMethods() {
      const paymentMethods = document.querySelectorAll('.payment-method');
      const paymentMethodInput = document.getElementById('paymentMethod');

      paymentMethods.forEach(method => {
        method.addEventListener('click', () => {
          paymentMethods.forEach(m => m.classList.remove('selected'));
          method.classList.add('selected');
          paymentMethodInput.value = method.dataset.method;
        });
      });

      // Select COD by default
      const codMethod = document.querySelector('.payment-method[data-method="cod"]');
      if (codMethod) {
        codMethod.click();
      }
    }

    setupFormSubmission() {
      const form = document.getElementById('checkoutForm');
      const submitBtn = document.getElementById('placeOrderBtn');

      form.addEventListener('submit', async (e) => {
        e.preventDefault();
        
        if (!this.validateForm()) {
          return;
        }

        submitBtn.disabled = true;
        submitBtn.innerHTML = '<div class="loading-spinner"></div> Processing...';

        try {
          const formData = new FormData(form);
          const data = Object.fromEntries(formData);

          const response = await fetch('/checkout/process', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
            },
            body: JSON.stringify(data)
          });

          const result = await response.json();

          if (result.success) {
            this.showNotification('Order placed successfully!', 'success');
            
            // Update cart count
            const cartBadge = document.querySelector('.cart-badge');
            if (cartBadge) {
              cartBadge.textContent = '0';
            }

            // Redirect to confirmation page
            setTimeout(() => {
              window.location.href = result.redirectUrl;
            }, 1500);
          } else {
            this.showNotification(result.message, 'error');
            submitBtn.disabled = false;
            submitBtn.innerHTML = '<i class="fas fa-lock"></i> Place Order';
          }
        } catch (error) {
          console.error('Error processing checkout:', error);
          this.showNotification('Failed to process order. Please try again.', 'error');
          submitBtn.disabled = false;
          submitBtn.innerHTML = '<i class="fas fa-lock"></i> Place Order';
        }
      });
    }

    validateForm() {
      const requiredFields = document.querySelectorAll('[required]');
      let isValid = true;

      requiredFields.forEach(field => {
        if (!field.value.trim()) {
          isValid = false;
          field.style.borderColor = 'var(--danger)';
        } else {
          field.style.borderColor = '';
        }
      });

      const paymentMethod = document.getElementById('paymentMethod').value;
      if (!paymentMethod) {
        this.showNotification('Please select a payment method', 'error');
        isValid = false;
      }

      // Validate email format
      const emailField = document.querySelector('input[type="email"]');
      if (emailField.value && !this.isValidEmail(emailField.value)) {
        this.showNotification('Please enter a valid email address', 'error');
        emailField.style.borderColor = 'var(--danger)';
        isValid = false;
      }

      // Validate phone number
      const phoneField = document.querySelector('input[type="tel"]');
      if (phoneField.value && !this.isValidPhone(phoneField.value)) {
        this.showNotification('Please enter a valid phone number', 'error');
        phoneField.style.borderColor = 'var(--danger)';
        isValid = false;
      }

      return isValid;
    }

    isValidEmail(email) {
      const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
      return emailRegex.test(email);
    }

    isValidPhone(phone) {
      const phoneRegex = /^[6-9]\d{9}$/;
      return phoneRegex.test(phone.replace(/\D/g, ''));
    }

    showNotification(message, type = 'success') {
      const notification = document.createElement('div');
      notification.className = `notification ${type}`;
      
      const icon = type === 'success' ? 'fa-check-circle' : 'fa-exclamation-circle';
      
      notification.innerHTML = `
        <i class="fas ${icon}"></i>
        <div>${message}</div>
      `;

      document.body.appendChild(notification);

      setTimeout(() => {
        notification.style.opacity = '0';
        setTimeout(() => notification.remove(), 300);
      }, 4000);
    }
  }

  // Initialize checkout manager
  document.addEventListener('DOMContentLoaded', () => {
    window.checkoutManager = new CheckoutManager();
  });
</script>

<%- include("../../views/partials/user/footer") %>