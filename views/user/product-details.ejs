<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title>
    <%= product.productName %> | Your Store
  </title>

  <!-- FontAwesome CDN -->
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" />

  <!-- Google Fonts -->
  <link
    href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&family=Playfair+Display:wght@700;800&display=swap"
    rel="stylesheet">

  <style>
    /* ========== Design System ========== */
    :root {
      /* Colors */
      --primary: #1e918b;
      --primary-light: rgba(30, 145, 139, 0.1);
      --primary-hover: #15736e;
      --secondary: #46698f;
      --secondary-hover: #3a5a7a;
      --success: #28a745;
      --danger: #e63946;
      --warning: #ffc107;
      --light-bg: #f9fafb;
      --card-bg: #ffffff;
      --text-main: #1a1a1a;
      --text-muted: #4c4e4c;
      --border-color: #e5e7eb;

      /* Spacing */
      --space-xs: 0.5rem;
      --space-sm: 1rem;
      --space-md: 1.5rem;
      --space-lg: 2rem;
      --space-xl: 3rem;

      /* Typography */
      --font-sans: 'Inter', -apple-system, BlinkMacSystemFont, sans-serif;
      --font-serif: 'Playfair Display', serif;
      --text-sm: 0.875rem;
      --text-base: 1rem;
      --text-lg: 1.125rem;
      --text-xl: 1.25rem;
      --text-2xl: 1.5rem;
      --text-3xl: 2rem;
      --text-4xl: 2.5rem;

      /* Effects */
      --shadow-sm: 0 2px 4px rgba(0, 0, 0, 0.05);
      --shadow-md: 0 6px 16px rgba(0, 0, 0, 0.08);
      --shadow-lg: 0 12px 28px rgba(0, 0, 0, 0.12);
      --border-radius-sm: 8px;
      --border-radius-md: 12px;
      --border-radius-lg: 16px;
      --transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    }

    /* ========== Base Styles ========== */
    * {
      box-sizing: border-box;
      margin: 0;
      padding: 0;
    }

    body {
      font-family: var(--font-sans);
      background-color: var(--light-bg);
      color: var(--text-main);
      line-height: 1.6;
      -webkit-font-smoothing: antialiased;
      scroll-behavior: smooth;
    }

    img {
      max-width: 100%;
      height: auto;
      display: block;
    }

    .container {
      max-width: 1320px;
      margin: 0 auto;
      padding: var(--space-lg) var(--space-xl);
    }

    /* ========== Breadcrumb ========== */
    .breadcrumb {
      margin-bottom: var(--space-xl);
      background: var(--card-bg);
      padding: var(--space-sm);
      border-radius: var(--border-radius-sm);
    }

    .breadcrumb-list {
      display: flex;
      flex-wrap: wrap;
      align-items: center;
      gap: var(--space-sm);
      list-style: none;
      padding: 0;
    }

    .breadcrumb-link {
      color: var(--text-muted);
      font-size: var(--text-sm);
      font-weight: 500;
      text-decoration: none;
      transition: color var(--transition);
      position: relative;
      padding-bottom: 2px;
    }

    .breadcrumb-link:hover {
      color: var(--primary);
    }

    .breadcrumb-link::after {
      content: '';
      position: absolute;
      bottom: 0;
      left: 0;
      width: 0;
      height: 2px;
      background-color: var(--primary);
      transition: width var(--transition);
    }

    .breadcrumb-link:hover::after {
      width: 100%;
    }

    .breadcrumb-separator {
      color: var(--text-muted);
      opacity: 0.6;
      font-size: var(--text-sm);
    }

    .breadcrumb-current {
      color: var(--text-main);
      font-weight: 600;
      font-family: var(--font-serif);
      font-size: var(--text-base);
    }

    /* ========== Product Card ========== */
    .product-card {
      display: grid;
      grid-template-columns: 1fr 1fr;
      gap: var(--space-xl);
      background-color: var(--card-bg);
      padding: var(--space-xl);
      border-radius: var(--border-radius-lg);
      box-shadow: var(--shadow-md);
      transition: transform var(--transition), box-shadow var(--transition);
      position: relative;
      overflow: hidden;
    }

    .product-card:hover {
      box-shadow: var(--shadow-lg);
      transform: translateY(-4px);
    }

    .product-card::before {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background: linear-gradient(135deg, var(--primary-light) 0%, rgba(255, 255, 255, 0.3) 100%);
      pointer-events: none;
      opacity: 0.5;
    }

    @media (max-width: 992px) {
      .product-card {
        grid-template-columns: 1fr;
        gap: var(--space-lg);
        padding: var(--space-lg);
      }
    }

    /* ========== Product Gallery ========== */
    .product-gallery {
      min-width: 0;
      max-width: 600px;
      position: relative;
    }

    .main-image-container {
      position: relative;
      overflow: hidden;
      border-radius: var(--border-radius-md);
      background-color: #f8fafc;
      margin-bottom: var(--space-md);
      aspect-ratio: 1/1;
      box-shadow: var(--shadow-sm);
      transition: box-shadow var(--transition);
    }

    .main-image-container:hover {
      box-shadow: var(--shadow-md);
    }

    .main-image {
      width: 100%;
      height: 100%;
      object-fit: contain;
      transition: transform 0.5s ease-in-out;
      cursor: zoom-in;
    }

    .main-image:hover {
      transform: scale(1.05);
    }

    .thumbnail-container {
      display: flex;
      gap: var(--space-sm);
      padding-bottom: var(--space-xs);
      overflow-x: auto;
      scrollbar-width: thin;
      scrollbar-color: var(--primary) rgba(0, 0, 0, 0.1);
    }

    .thumbnail-container::-webkit-scrollbar {
      height: 6px;
    }

    .thumbnail-container::-webkit-scrollbar-thumb {
      background-color: var(--primary);
      border-radius: 4px;
    }

    .thumbnail {
      width: 90px;
      height: 90px;
      object-fit: cover;
      border-radius: var(--border-radius-sm);
      border: 2px solid transparent;
      cursor: pointer;
      transition: var(--transition);
      flex-shrink: 0;
      background-color: #fff;
      box-shadow: var(--shadow-sm);
    }

    .thumbnail:hover {
      border-color: var(--primary);
      transform: translateY(-4px);
      box-shadow: var(--shadow-md);
    }

    .thumbnail.active {
      border-color: var(--primary);
      box-shadow: 0 0 0 4px var(--primary-light), 0 6px 16px rgba(30, 145, 139, 0.2);
    }

    /* ========== Product Info ========== */
    .product-info {
      min-width: 300px;
      padding: var(--space-md) 0;
    }

    .product-title {
      font-size: var(--text-3xl);
      font-weight: 800;
      margin-bottom: var(--space-sm);
      line-height: 1.3;
      font-family: var(--font-serif);
      letter-spacing: -0.02em;
    }

    .product-brand {
      display: inline-flex;
      align-items: center;
      color: var(--primary);
      font-weight: 600;
      margin-bottom: var(--space-md);
      padding: var(--space-xs) var(--space-md);
      background-color: var(--primary-light);
      border-radius: 50px;
      font-size: var(--text-sm);
      letter-spacing: 0.5px;
      transition: var(--transition);
    }

    .product-brand:hover {
      background-color: var(--primary);
      color: white;
    }

    .product-brand i {
      margin-right: var(--space-xs);
    }

    .price-container {
      display: flex;
      align-items: center;
      flex-wrap: wrap;
      gap: var(--space-md);
      margin-bottom: var(--space-lg);
    }

    .current-price {
      font-family: var(--font-sans);
      font-size: var(--text-3xl);
      font-weight: 700;
      color: var(--primary);
      letter-spacing: -0.02em;
    }

    .original-price {
      font-size: var(--text-xl);
      color: var(--text-muted);
      text-decoration: line-through;
    }

    .discount-badge {
      background-color: #fff0f0;
      color: var(--danger);
      padding: var(--space-xs) var(--space-md);
      border-radius: 50px;
      font-weight: 600;
      font-size: var(--text-sm);
      box-shadow: var(--shadow-sm);
      transition: var(--transition);
    }

    .discount-badge:hover {
      transform: translateY(-2px);
      box-shadow: var(--shadow-md);
    }

    .total-discount {
      transition: var(--transition);
    }

    .total-discount:hover {
      transform: translateY(-2px);
    }

    .product-description {
      line-height: 1.8;
      margin-bottom: var(--space-xl);
      color: var(--text-main);
      font-size: var(--text-lg);
      max-width: 600px;
    }

    /* ========== Action Buttons ========== */
    .action-container {
      display: flex;
      flex-wrap: wrap;
      align-items: center;
      gap: var(--space-md);
      margin-bottom: var(--space-xl);
    }

    .quantity-selector {
      display: flex;
      align-items: center;
      border: 1px solid var(--border-color);
      border-radius: var(--border-radius-md);
      overflow: hidden;
      background-color: #f9fafb;
      box-shadow: var(--shadow-sm);
    }

    .quantity-btn {
      width: 48px;
      height: 48px;
      display: flex;
      align-items: center;
      justify-content: center;
      background-color: #ffffff;
      border: none;
      font-size: var(--text-lg);
      cursor: pointer;
      transition: var(--transition);
      color: var(--primary);
    }

    .quantity-btn:hover {
      background-color: var(--primary-light);
      color: var(--primary-hover);
    }

    .quantity-btn:disabled {
      opacity: 0.4;
      cursor: not-allowed;
    }

    .quantity-value {
      width: 70px;
      text-align: center;
      font-weight: 600;
      font-size: var(--text-lg);
      color: var(--text-main);
      padding: 0 var(--space-sm);
    }

    .add-to-cart-btn {
      display: flex;
      align-items: center;
      gap: var(--space-sm);
      padding: var(--space-sm) var(--space-lg);
      background-color: var(--secondary);
      color: white;
      border: none;
      border-radius: var(--border-radius-md);
      font-weight: 600;
      font-size: var(--text-base);
      cursor: pointer;
      transition: var(--transition);
      box-shadow: var(--shadow-md);
      position: relative;
      overflow: hidden;
    }

    .add-to-cart-btn:hover {
      background-color: var(--secondary-hover);
      transform: translateY(-2px);
      box-shadow: var(--shadow-lg);
    }

    .add-to-cart-btn:disabled {
      opacity: 0.7;
      cursor: not-allowed;
    }

    .add-to-cart-btn::after {
      content: '';
      position: absolute;
      top: 0;
      left: -100%;
      width: 100%;
      height: 100%;
      background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
      transition: 0.5s;
    }

    .add-to-cart-btn:hover::after {
      left: 100%;
    }

    .wishlist-btn {
      width: 52px;
      height: 52px;
      display: flex;
      align-items: center;
      justify-content: center;
      background-color: white;
      border: 1px solid var(--border-color);
      border-radius: 50%;
      cursor: pointer;
      transition: var(--transition);
      box-shadow: var(--shadow-sm);
    }

    .wishlist-btn:hover {
      border-color: var(--danger);
      color: var(--danger);
      transform: scale(1.08);
      box-shadow: var(--shadow-md);
    }

    .wishlist-btn.active {
      color: var(--danger);
      border-color: var(--danger);
      background-color: #fff5f5;
      box-shadow: 0 0 0 4px rgba(230, 57, 70, 0.1);
    }

    /* ========== Product Meta ========== */
    .product-meta {
      list-style: none;
      padding: 0;
      margin-top: var(--space-xl);
      border-top: 1px solid #f0f0f0;
      padding-top: var(--space-lg);
    }

    .meta-item {
      display: flex;
      align-items: center;
      margin-bottom: var(--space-md);
    }

    .meta-label {
      font-weight: 600;
      min-width: 130px;
      color: var(--text-muted);
      font-size: var(--text-sm);
    }

    .meta-value {
      display: flex;
      flex-wrap: wrap;
      gap: var(--space-sm);
      align-items: center;
      color: var(--text-main);
    }

    .stock-badge {
      padding: var(--space-xs) var(--space-md);
      border-radius: 50px;
      font-size: var(--text-sm);
      font-weight: 600;
      display: inline-flex;
      align-items: center;
      gap: var(--space-xs);
      transition: var(--transition);
    }

    .stock-badge:hover {
      transform: translateY(-2px);
    }

    .in-stock {
      background-color: #e6f4ea;
      color: var(--success);
    }

    .out-of-stock {
      background-color: #fff0f0;
      color: var(--danger);
    }

    .variant-chip {
      display: inline-flex;
      align-items: center;
      padding: var(--space-xs) var(--space-md);
      border-radius: 50px;
      background-color: #f8f9fa;
      font-size: var(--text-sm);
      font-weight: 500;
      box-shadow: var(--shadow-sm);
      transition: var(--transition);
      cursor: pointer;
    }

    .variant-chip:hover {
      transform: translateY(-2px);
      box-shadow: var(--shadow-md);
    }

    .variant-chip.active {
      background-color: var(--primary-light);
      color: var(--primary);
      box-shadow: 0 0 0 4px var(--primary-light), 0 6px 16px rgba(30, 145, 139, 0.2);
    }

    /* ========== Reviews Section ========== */
    .reviews-section {
      margin-top: var(--space-xl);
      padding: var(--space-lg);
      background: var(--card-bg);
      border-radius: var(--border-radius-md);
      box-shadow: var(--shadow-md);
      transition: var(--transition);
    }

    .reviews-section:hover {
      box-shadow: var(--shadow-lg);
    }

    .reviews-section h2 {
      font-family: var(--font-serif);
      font-size: var(--text-2xl);
      font-weight: 700;
      margin-bottom: var(--space-lg);
    }

    .review-form {
      margin-bottom: var(--space-xl);
      padding: var(--space-md);
      background: var(--primary-light);
      border-radius: var(--border-radius-md);
      box-shadow: var(--shadow-sm);
    }

    .review-form h3 {
      font-family: var(--font-serif);
      font-size: var(--text-lg);
      margin-bottom: var(--space-md);
    }

    .rating-input {
      margin-bottom: var(--space-md);
    }

    .rating-input .stars {
      display: inline-flex;
      direction: rtl;
      gap: var(--space-xs);
    }

    .rating-input input[type="radio"] {
      display: none;
    }

    .rating-input label {
      font-size: 1.8rem;
      color: #e0e0e0;
      cursor: pointer;
      transition: color 0.2s ease;
    }

    .rating-input input[type="radio"]:checked~label,
    .rating-input label:hover,
    .rating-input label:hover~label {
      color: #ffd700;
    }

    .form-group {
      margin-bottom: var(--space-md);
    }

    .form-group label {
      display: block;
      font-weight: 600;
      font-size: var(--text-sm);
      margin-bottom: var(--space-xs);
      color: var(--text-muted);
    }

    .form-group textarea {
      width: 100%;
      padding: var(--space-sm);
      border: 1px solid var(--border-color);
      border-radius: var(--border-radius-sm);
      font-size: var(--text-base);
      resize: vertical;
      transition: var(--transition);
    }

    .form-group textarea:focus {
      outline: none;
      border-color: var(--primary);
      box-shadow: 0 0 0 3px var(--primary-light);
    }

    .submit-btn {
      padding: var(--space-sm) var(--space-lg);
      background-color: var(--primary);
      color: white;
      border: none;
      border-radius: var(--border-radius-md);
      font-weight: 600;
      cursor: pointer;
      transition: var(--transition);
      box-shadow: var(--shadow-sm);
    }

    .submit-btn:hover {
      background-color: var(--primary-hover);
      transform: translateY(-2px);
      box-shadow: var(--shadow-md);
    }

    .submit-btn:disabled {
      opacity: 0.7;
      cursor: not-allowed;
    }

    .review {
      padding: var(--space-md) 0;
      border-top: 1px solid var(--border-color);
      transition: var(--transition);
    }

    .review:hover {
      background-color: #f9fafb;
      border-radius: var(--border-radius-sm);
    }

    .review-header {
      display: flex;
      justify-content: space-between;
      align-items: center;
      margin-bottom: var(--space-sm);
    }

    .user-info {
      display: flex;
      align-items: center;
      gap: var(--space-sm);
    }

    .user-name {
      font-weight: 600;
      font-size: var(--text-base);
    }

    .review-rating .star {
      font-size: 1.2rem;
      color: #e0e0e0;
    }

    .review-rating .star.filled {
      color: #ffd700;
    }

    .review-date {
      font-size: var(--text-sm);
      color: var(--text-muted);
    }

    .review-comment {
      font-size: var(--text-base);
      line-height: 1.7;
    }

    /* ========== Product Specs ========== */
    .product-specs {
      margin: var(--space-xl) 0;
      padding: var(--space-lg);
      background: var(--card-bg);
      border-radius: var(--border-radius-md);
      box-shadow: var(--shadow-md);
      transition: var(--transition);
    }

    .product-specs:hover {
      box-shadow: var(--shadow-lg);
    }

    .product-specs h2 {
      font-family: var(--font-serif);
      font-size: var(--text-2xl);
      font-weight: 700;
      margin-bottom: var(--space-lg);
    }

    .product-specs ul {
      list-style: none;
      padding: 0;
    }

    .product-specs li {
      padding: var(--space-sm) 0;
      display: flex;
      align-items: center;
      gap: var(--space-md);
    }

    .product-specs li span:first-child {
      font-weight: 600;
      min-width: 160px;
      color: var(--text-muted);
    }

    /* ========== Related Products ========== */
    .related-products {
      margin-top: var(--space-xl);
    }

    .related-products h2 {
      font-family: var(--font-serif);
      font-size: var(--text-2xl);
      font-weight: 700;
      margin-bottom: var(--space-lg);
    }

    .related-grid {
      display: grid;
      grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));
      gap: var(--space-lg);
    }

    .related-card {
      background: var(--card-bg);
      border-radius: var(--border-radius-md);
      padding: var(--space-md);
      box-shadow: var(--shadow-md);
      transition: var(--transition);
    }

    .related-card:hover {
      transform: translateY(-4px);
      box-shadow: var(--shadow-lg);
    }

    .related-card img {
      border-radius: var(--border-radius-sm);
      transition: var(--transition);
    }

    .related-card:hover img {
      transform: scale(1.03);
    }

    .related-card h3 {
      font-size: var(--text-lg);
      font-weight: 600;
      margin-bottom: var(--space-sm);
    }

    /* ========== Responsive Adjustments ========== */
    @media (max-width: 768px) {
      .container {
        padding: var(--space-md);
      }

      .product-title {
        font-size: var(--text-2xl);
      }

      .current-price {
        font-size: var(--text-2xl);
      }

      .original-price {
        font-size: var(--text-lg);
      }

      .action-container {
        flex-direction: column;
        align-items: flex-start;
        gap: var(--space-lg);
      }

      .thumbnail {
        width: 80px;
        height: 80px;
      }
    }

    /* ========== Animations ========== */
    @keyframes pulse {
      0% {
        transform: scale(1);
      }

      50% {
        transform: scale(1.08);
      }

      100% {
        transform: scale(1);
      }
    }

    .add-to-cart-animate {
      animation: pulse 0.4s ease;
    }

    /* ========== Image Zoom Modal ========== */
    .image-zoom-modal {
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background-color: rgba(0, 0, 0, 0.95);
      display: flex;
      align-items: center;
      justify-content: center;
      z-index: 10000;
      opacity: 0;
      pointer-events: none;
      transition: opacity 0.4s cubic-bezier(0.16, 1, 0.3, 1);
      backdrop-filter: blur(10px);
    }

    .image-zoom-modal.active {
      opacity: 1;
      pointer-events: auto;
    }

    .zoomed-image-container {
      position: relative;
      max-width: 95vw;
      max-height: 95vh;
      display: flex;
      align-items: center;
      justify-content: center;
    }

    .zoomed-image {
      max-width: 100%;
      max-height: 100%;
      object-fit: contain;
      border-radius: var(--border-radius-md);
      box-shadow: 0 20px 40px rgba(0, 0, 0, 0.4);
      transition: transform 0.3s ease;
    }

    .close-zoom {
      position: absolute;
      top: var(--space-lg);
      right: var(--space-lg);
      color: white;
      font-size: 2.2rem;
      cursor: pointer;
      transition: transform 0.3s ease, background 0.3s ease;
      background: rgba(0, 0, 0, 0.6);
      width: 48px;
      height: 48px;
      display: flex;
      align-items: center;
      justify-content: center;
      border-radius: 50%;
      border: none;
    }

    .close-zoom:hover {
      transform: rotate(90deg);
      background: rgba(0, 0, 0, 0.8);
    }

    /* ========== Floating Labels ========== */
    .floating-label {
      position: absolute;
      top: var(--space-lg);
      left: var(--space-lg);
      background-color: var(--primary);
      color: white;
      padding: var(--space-xs) var(--space-md);
      border-radius: 50px;
      font-weight: 600;
      font-size: var(--text-sm);
      z-index: 10;
      box-shadow: var(--shadow-md);
      transition: var(--transition);
    }

    .floating-label:hover {
      transform: translateY(-2px);
      box-shadow: var(--shadow-lg);
    }

    /* ========== Loading State ========== */
    .loading-shimmer {
      background: linear-gradient(to right, #f6f7f8 8%, #e9ecef 18%, #f6f7f8 33%);
      background-size: 800px 104px;
      animation-duration: 1.5s;
      animation-fill-mode: forwards;
      animation-iteration-count: infinite;
      animation-name: shimmer;
      animation-timing-function: linear;
    }

    @keyframes shimmer {
      0% {
        background-position: -468px 0
      }

      100% {
        background-position: 468px 0
      }
    }

    /* ========== Notification Styles ========== */
    .notification {
      position: fixed;
      bottom: 24px;
      right: 24px;
      padding: var(--space-md) var(--space-lg);
      border-radius: var(--border-radius-md);
      box-shadow: var(--shadow-lg);
      display: flex;
      align-items: center;
      gap: var(--space-sm);
      z-index: 1000;
      animation: slideIn 0.3s ease-out;
      max-width: 400px;
    }

    .notification.success {
      background: #e6f4ea;
      color: var(--success);
      border-left: 4px solid var(--success);
    }

    .notification.error {
      background: #fff0f0;
      color: var(--danger);
      border-left: 4px solid var(--danger);
    }

    .notification.fade-out {
      animation: slideOut 0.3s ease-in forwards;
    }

    a {
      text-decoration: none;
    }

    a:visited {
      color: LinkText;
    }
  </style>
</head>

<body>
  <div class="container">
    <!-- Breadcrumb Navigation -->
    <nav class="breadcrumb" aria-label="Breadcrumb">
      <ol class="breadcrumb-list">
        <li><a href="/" class="breadcrumb-link">Home</a></li>
        <li class="breadcrumb-separator">/</li>
        <li><a href="/shop" class="breadcrumb-link">Shop</a></li>
        <li class="breadcrumb-separator">/</li>
        <li class="breadcrumb-current">
          <%= product.productName %>
        </li>
      </ol>
    </nav>

    <!-- Product Card -->
    <div class="product-card">
      <% if (product.productOffer && parseFloat(product.productOffer)> 0) { %>
        <div class="floating-label">
          <%= product.productOffer %>% OFF
        </div>
        <% } %>

          <!-- Product Gallery -->
          <div class="product-gallery">
            <div class="main-image-container">
              <% if (product.productImage?.length) { %>
                <img src="/uploads/re-image/<%= product.productImage[0] %>" alt="<%= product.productName %>"
                  class="main-image" id="product-main-image" loading="lazy">
                <% } else { %>
                  <img src="/images/default-placeholder.jpg" alt="No image available" class="main-image"
                    id="product-main-image" loading="lazy">
                  <% } %>
            </div>

            <div class="thumbnail-container">
              <% product.productImage?.forEach((img, i)=> { %>
                <img src="/uploads/re-image/<%= img %>" alt="Thumbnail <%= i + 1 %>"
                  class="thumbnail <%= i === 0 ? 'active' : '' %>" data-full-image="/uploads/re-image/<%= img %>"
                  loading="lazy">
                <% }) %>
            </div>
          </div>

          <!-- Product Information -->
          <div class="product-info">
            <h1 class="product-title">
              <%= product.productName.toUpperCase() %>
            </h1>
            <div class="product-brand">
              <%= product.brand?.brandName || "Premium Brand" %>
            </div>

            <div class="price-container">
              <div class="current-price">₹<%= product.salePrice.toLocaleString() %>
              </div>
              <% if (product.regularPrice> product.salePrice) { %>
                <div class="original-price">₹<%= product.regularPrice.toLocaleString() %>
                </div>
                <div class="discount-badge">
                  Save ₹<%= (product.regularPrice - product.salePrice).toLocaleString() %>
                </div>
                <% } %>
                  <% if (totalOffer> 0) { %>
                    <div class="total-discount">
                      <i class="fas fa-tag"></i> Total <%= totalOffer %>% OFF
                    </div>
                    <% } %>
            </div>

            <div class="product-description">
              <p>
                <%= product.description || "This premium product comes with exceptional quality and craftsmanship." %>
              </p>
              <% if (product.brandOffer) { %>
                <div
                  style="margin-top: var(--space-md); padding: var(--space-sm); background-color: #fff9e6; border-radius: var(--border-radius-sm); border-left: 4px solid var(--warning);">
                  <strong>Brand Offer:</strong>
                  <%= product.brandOffer %>
                </div>
                <% } %>
            </div>

            <div class="action-container">
              <div class="quantity-selector">
                <button class="quantity-btn minus" aria-label="Decrease quantity">−</button>
                <span class="quantity-value">1</span>
                <button class="quantity-btn plus" aria-label="Increase quantity">+</button>
              </div>

              <button class="add-to-cart-btn" id="add-to-cart" aria-label="Add to cart" disabled>
                <i class="fas fa-shopping-cart"></i> Add to Cart
              </button>

              <button class="wishlist-btn" id="wishlist-btn" aria-label="Add to wishlist">
                <i class="far fa-heart"></i>
              </button>
            </div>

            <ul class="product-meta">
              <li class="meta-item">
                <span class="meta-label">Availability:</span>
                <span class="meta-value">
                  <% if (product.totalQuantity> 0) { %>
                    <span class="stock-badge in-stock">
                      <i class="fas fa-check-circle"></i> In Stock (<%= product.totalQuantity %> available)
                    </span>
                    <% } else { %>
                      <button class="add-to-cart-btn"
                        style="background-color: #f0f0f0; color: #666; cursor: not-allowed;" disabled>
                        <i class="fas fa-times-circle"></i> Out of Stock
                      </button>
                      <button class="notify-btn"
                        style="background-color: var(--warning); color: white; padding: var(--space-sm) var(--space-lg); border-radius: var(--border-radius-md); border: none; margin-top: var(--space-sm); box-shadow: var(--shadow-sm); transition: var(--transition);">
                        <i class="fas fa-bell"></i> Notify When Available
                      </button>
                      <% } %>
                </span>
              </li>
              <li class="meta-item">
                <span class="meta-label">Category:</span>
                <span class="meta-value">
                  <span
                    style="background-color: #f0f7ff; padding: var(--space-xs) var(--space-md); border-radius: 50px;">
                    <i class="fas fa-tag"></i>
                    <%= product.category?.categoryName || "Premium" %>
                  </span>
                </span>
              </li>
              <li class="meta-item">
                <span class="meta-label">Variants:</span>
                <span class="meta-value">
                  <% if (product.variants?.length) { %>
                    <% product.variants.forEach((variant, index)=> { %>
                      <span class="variant-chip" data-variant-id="<%= variant._id %>">
                        <%= variant.specs.map(spec=> `${spec.name}: ${spec.value}`).join(', ') %>
                          (Qty: <%= variant.quantity %>)
                      </span>
                      <% }) %>
                        <% } else { %>
                          <span>No variants available</span>
                          <% } %>
                </span>
              </li>
            </ul>
          </div>
    </div>

    <!-- Product Highlights -->
    <section class="product-specs">
      <h2>Product Highlights</h2>
      <ul>
        <!-- Always display product description -->
        <li>
          <span>Description:</span>
          <span>
            <%= product.description %>
          </span>
        </li>
        <!-- Display variant specifications -->
        <% if (specs.length> 0) { %>
          <% const uniqueSpecs=[...new Map(specs.map(spec=> [spec.name.toLowerCase(), spec])).values()]; %>
            <% uniqueSpecs.forEach(spec=> { %>
              <li>
                <span>
                  <%= spec.name %>:
                </span>
                <span>
                  <%= spec.value %>
                </span>
              </li>
              <% }) %>
                <% } %>
      </ul>
    </section>

    <!-- Reviews Section -->
    <section class="reviews-section">
      <h2>Customer Reviews</h2>
      <div class="average-rating">
        Average Rating: <%= averageRating.toFixed(1) %>
          <span class="stars">
            <% for (let i=1; i<=5; i++) { %>
              <span class="star <%= i <= Math.round(averageRating) ? 'filled' : '' %>">★</span>
              <% } %>
          </span>
          (<%= reviews.length %> reviews)
      </div>

      <!-- Review Form (only for logged-in users) -->
      <% if (user) { %>
        <div class="review-form">
          <h3>Write a Review</h3>
          <form id="reviewForm" action="/submit" method="POST" onsubmit="return submitReview(event)">
            <input type="hidden" name="productId" value="<%= product._id %>">
            <input type="hidden" name="userId" value="<%= user._id %>">

            <div class="rating-input">
              <label>Rating:</label>
              <div class="stars">
                <% for (let i=5; i>=1; i--) { %>
                  <input type="radio" id="star<%= i %>" name="rating" value="<%= i %>" required>
                  <label for="star<%= i %>">★</label>
                  <% } %>
              </div>
              <span class="error" id="rating-error" style="color: red; display: none;">Please select a rating.</span>
            </div>

            <div class="form-group">
              <label for="comment">Your Review:</label>
              <textarea name="comment" id="comment" rows="4" maxlength="500" required
                oninput="updateCharCount()"></textarea>
              <small id="char-count">0/500 characters</small>
            </div>

            <button type="submit" class="submit-btn">Submit Review</button>
          </form>
        </div>
        <% } else { %>
          <p>Please <a href="/login" style="color: var(--primary); text-decoration: none; font-weight: 600;">login</a>
            to write a review.</p>
          <% } %>

            <!-- Reviews List -->
            <div class="reviews-list">
              <% if (reviews.length> 0) { %>
                <% reviews.forEach(review=> { %>
                  <div class="review">
                    <div class="review-header">
                      <div class="user-info">
                        <span class="user-name">
                          <%= review.user ? (review.user.firstName + ' ' + review.user.lastName) : 'Anonymous' %>
                        </span>
                        <div class="review-rating">
                          <% for (let i=1; i<=5; i++) { %>
                            <span class="star <%= i <= review.rating ? 'filled' : '' %>">★</span>
                            <% } %>
                        </div>
                      </div>
                      <span class="review-date">
                        <%= new Date(review.createdAt).toLocaleString('en-IN', { timeZone: 'Asia/Kolkata' ,
                          year: 'numeric' , month: 'short' , day: 'numeric' , hour: '2-digit' , minute: '2-digit' }) %>
                      </span>
                    </div>
                    <p class="review-comment">
                      <%= review.comment %>
                    </p>
                  </div>
                  <% }) %>
                    <% } else { %>
                      <p>No reviews yet. Be the first to review!</p>
                      <% } %>
            </div>
    </section>

    <% if (relatedProducts?.length) { %>
      <section class="related-products">
        <h2>You May Also Like</h2>
        <div class="related-grid">
          <% relatedProducts.forEach(prod=> { %>
            <div class="related-card">
              <a href="/productDetails/<%= prod._id %>">
                <img src="/uploads/re-image/<%= prod.productImage[0] %>" alt="<%= prod.productName %>">
                <h3 style="color: #070001;">
                  <%= prod.productName.toUpperCase() %>
                </h3>
                <div style="display: flex; gap: var(--space-sm); align-items: center;">
                  <span style="font-weight: 700; color: var(--primary);">₹<%= prod.salePrice.toLocaleString() %></span>
                  <% if (prod.regularPrice> prod.salePrice) { %>
                    <span style="text-decoration: line-through; color: var(--text-muted); font-size: var(--text-sm);">
                      ₹<%= prod.regularPrice.toLocaleString() %>
                    </span>
                    <% } %>
                </div>
              </a>
            </div>
            <% }) %>
        </div>
      </section>
      <% } %>
  </div>

  <!-- Image Zoom Modal -->
  <div class="image-zoom-modal" id="imageZoomModal">
    <button class="close-zoom" aria-label="Close zoomed image">&times;</button>
    <div class="zoomed-image-container">
      <img src="" alt="Zoomed product image" class="zoomed-image" id="zoomedImage">
    </div>
  </div>

  <script>
    document.addEventListener('DOMContentLoaded', function () {
      // DOM Elements
      const thumbnails = document.querySelectorAll('.thumbnail');
      const mainImage = document.getElementById('product-main-image');
      const zoomModal = document.getElementById('imageZoomModal');
      const zoomedImage = document.getElementById('zoomedImage');
      const closeZoomBtn = document.querySelector('.close-zoom');
      const minusBtn = document.querySelector('.quantity-btn.minus');
      const plusBtn = document.querySelector('.quantity-btn.plus');
      const quantityValue = document.querySelector('.quantity-value');
      const addToCartBtn = document.getElementById('add-to-cart');
      const wishlistBtn = document.getElementById('wishlist-btn');
      const variantChips = document.querySelectorAll('.variant-chip');

      // State
      let currentQty = 1;
      let selectedVariant = null;
      const maxQty = '<%= product.quantity || 10 %>';
      let isWishlisted = false;

      // Initialize
      updateQuantityButtons();
      checkWishlistStatus();
      addToCartBtn.disabled = true; // Initially disabled

      // Thumbnail Click Handler
      thumbnails.forEach(thumb => {
        thumb.addEventListener('click', function () {
          const newSrc = this.dataset.fullImage;
          const newAlt = this.alt.replace('thumbnail', 'main image');

          mainImage.style.opacity = 0;
          mainImage.style.transform = 'scale(0.95)';
          setTimeout(() => {
            mainImage.src = newSrc;
            mainImage.alt = newAlt;
            mainImage.style.opacity = 1;
            mainImage.style.transform = 'scale(1)';
          }, 200);

          thumbnails.forEach(t => t.classList.remove('active'));
          this.classList.add('active');
        });

        thumb.addEventListener('keydown', e => {
          if (e.key === 'Enter' || e.key === ' ') {
            e.preventDefault();
            thumb.click();
          }
        });
      });

      // Variant Selection
      variantChips.forEach(chip => {
        chip.addEventListener('click', function () {
          variantChips.forEach(c => c.classList.remove('active'));
          this.classList.add('active');
          selectedVariant = this.dataset.variantId;
          addToCartBtn.disabled = false; // Enable add to cart when variant is selected

          // Update max quantity based on selected variant
          const variantData = '<%- JSON.stringify(product.variants) %>';
          const selectedVariantData = variantData.find(v => v._id === selectedVariant);
          maxQty = selectedVariantData.quantity;
          currentQty = 1;
          updateQuantityButtons();
        });
      });

      // Quantity Controls
      function updateQuantityButtons() {
        minusBtn.disabled = currentQty <= 1;
        plusBtn.disabled = currentQty >= maxQty;
        quantityValue.textContent = currentQty;
      }

      minusBtn.addEventListener('click', () => {
        if (currentQty > 1) {
          currentQty--;
          updateQuantityButtons();
          animateQuantityChange();
        } else {
          minusBtn.style.transform = 'translateX(-4px)';
          setTimeout(() => minusBtn.style.transform = '', 300);
        }
      });

      plusBtn.addEventListener('click', () => {
        if (currentQty < maxQty) {
          currentQty++;
          updateQuantityButtons();
          animateQuantityChange();
        } else {
          plusBtn.style.transform = 'translateX(4px)';
          setTimeout(() => plusBtn.style.transform = '', 300);
        }
      });

      function animateQuantityChange() {
        quantityValue.style.transform = 'scale(1.2)';
        quantityValue.style.color = 'var(--primary)';
        setTimeout(() => {
          quantityValue.style.transform = '';
          quantityValue.style.color = '';
        }, 300);
      }

      // Add to Cart
      addToCartBtn.addEventListener('click', async function () {
        if (!selectedVariant) {
          showErrorNotification('Please select a variant');
          return;
        }

        if ('<%= product.quantity %>' <= 0) {
          showErrorNotification('This product is currently out of stock');
          return;
        }

        this.disabled = true;
        const originalText = this.innerHTML;
        this.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Adding...';

        try {
          const response = await fetch('/cart/add', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json'
            },
            body: JSON.stringify({
              productId: '<%= product._id %>',
              variantId: selectedVariant,
              quantity: currentQty
            })
          });

          const result = await response.json();

          if (result.success) {
            showSuccessNotification();
            if (result.cartCount) {
              updateCartCount(result.cartCount);
            }
          } else {
            showErrorNotification(result.message || 'Could not add to cart');
          }
        } catch (error) {
          showErrorNotification('Failed to add to cart. Please try again.');
        } finally {
          this.disabled = false;
          this.innerHTML = originalText;
          this.classList.add('add-to-cart-animate');
          setTimeout(() => this.classList.remove('add-to-cart-animate'), 500);
        }
      });

      function showSuccessNotification() {
        const notification = document.createElement('div');
        notification.className = 'notification success';
        notification.innerHTML = `
          <i class="fas fa-check-circle"></i>
          <div>
            <h4>Added to Cart</h4>
            <p>${currentQty} ${currentQty > 1 ? 'items' : 'item'} of <%= product.productName %></p>
          </div>
        `;

        document.body.appendChild(notification);
        setTimeout(() => {
          notification.classList.add('fade-out');
          setTimeout(() => notification.remove(), 300);
        }, 3000);
      }

      function showErrorNotification(message) {
        const notification = document.createElement('div');
        notification.className = 'notification error';
        notification.innerHTML = `
          <i class="fas fa-exclamation-circle"></i>
          <div>
            <h4>Error</h4>
            <p>${message}</p>
          </div>
        `;

        document.body.appendChild(notification);
        setTimeout(() => {
          notification.classList.add('fade-out');
          setTimeout(() => notification.remove(), 300);
        }, 3000);
      }

      function updateCartCount(count) {
        const cartCountElements = document.querySelectorAll('.cart-count');
        cartCountElements.forEach(el => {
          el.textContent = count;
          el.style.transform = 'scale(1.5)';
          setTimeout(() => el.style.transform = '', 500);
        });
      }

      // Wishlist Toggle
      wishlistBtn.addEventListener('click', async function () {
        const icon = this.querySelector('i');
        isWishlisted = !isWishlisted;

        if (isWishlisted) {
          this.classList.add('active');
          icon.classList.replace('far', 'fas');
          this.style.boxShadow = '0 0 0 8px rgba(230, 57, 70, 0.2)';
          icon.style.transform = 'scale(1.3)';
          setTimeout(() => icon.style.transform = '', 300);
        } else {
          this.classList.remove('active');
          icon.classList.replace('fas', 'far');
          this.style.boxShadow = '';
        }

        try {
          const endpoint = isWishlisted ? '/wishlist/add' : '/wishlist/remove';
          await fetch(`${endpoint}/<%= product._id %>`, {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json'
            },
          });
        } catch (error) {
          console.error('Wishlist error:', error);
          isWishlisted = !isWishlisted;
          if (isWishlisted) {
            this.classList.add('active');
            icon.classList.replace('far', 'fas');
          } else {
            this.classList.remove('active');
            icon.classList.replace('fas', 'far');
          }
        }
      });

      async function checkWishlistStatus() {
        try {
          const response = await fetch('/wishlist/check/<%= product._id %>');
          const data = await response.json();

          if (data.isInWishlist) {
            isWishlisted = true;
            wishlistBtn.classList.add('active');
            const icon = wishlistBtn.querySelector('i');
            icon.classList.replace('far', 'fas');
          }
        } catch (error) {
          console.error('Error checking wishlist status:', error);
        }
      }

      // Image Zoom Functionality
      function openZoom() {
        zoomedImage.src = mainImage.src;
        zoomedImage.alt = mainImage.alt;
        zoomModal.classList.add('active');
        document.body.style.overflow = 'hidden';
        closeZoomBtn.focus();
      }

      function closeZoom() {
        zoomModal.classList.remove('active');
        document.body.style.overflow = '';
        mainImage.focus();
      }

      mainImage.addEventListener('click', openZoom);
      mainImage.addEventListener('keydown', e => {
        if (e.key === 'Enter' || e.key === ' ') {
          e.preventDefault();
          openZoom();
        }
      });

      closeZoomBtn.addEventListener('click', closeZoom);
      zoomModal.addEventListener('click', e => {
        if (e.target === zoomModal) closeZoom();
      });

      document.addEventListener('keydown', e => {
        if (e.key === 'Escape' && zoomModal.classList.contains('active')) {
          closeZoom();
        }
      });

      // Review Form Submission
      document.getElementById('reviewForm')?.addEventListener('submit', async function (e) {
        e.preventDefault();

        const formData = new FormData(this);
        const submitBtn = this.querySelector('button[type="submit"]');
        const originalBtnText = submitBtn.textContent;

        try {
          submitBtn.disabled = true;
          submitBtn.textContent = 'Submitting...';

          const response = await fetch('/reviews/submit', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json'
            },
            body: JSON.stringify({
              productId: formData.get('productId'),
              rating: formData.get('rating'),
              comment: formData.get('comment')
            })
          });

          const result = await response.json();

          if (result.success) {
            const reviewsList = document.querySelector('.reviews-list');

            if (reviewsList.querySelector('p')) {
              reviewsList.innerHTML = '';
            }

            const reviewDate = new Date(result.review.createdAt).toLocaleDateString();

            reviewsList.insertAdjacentHTML('afterbegin', `
              <div class="review">
                <div class="review-header">
                  <div class="user-info">
                    <span class="user-name">${result.review.user.name}</span>
                    <div class="review-rating">
                      ${'★'.repeat(result.review.rating)}${'☆'.repeat(5 - result.review.rating)}
                    </div>
                  </div>
                  <span class="review-date">${reviewDate}</span>
                </div>
                <p class="review-comment">${result.review.comment}</p>
              </div>
            `);

            this.reset();
            showSuccessNotification('Review submitted successfully!');
          } else {
            showErrorNotification(result.message || 'Failed to submit review');
          }
        } catch (error) {
          showErrorNotification('An error occurred. Please try again.');
          console.error('Error:', error);
        } finally {
          submitBtn.disabled = false;
          submitBtn.textContent = originalBtnText;
        }
      });
    });

    // Add CSS for notifications
    const style = document.createElement('style');
    style.textContent = `
      @keyframes slideIn {
        from { transform: translateX(100%); opacity: 0; }
        to { transform: translateX(0); opacity: 1; }
      }
      @keyframes slideOut {
        from { transform: translateX(0); opacity: 1; }
        to { transform: translateX(100%); opacity: 0; }
      }
    `;
    document.head.appendChild(style);

    function updateCharCount() {
      const textarea = document.getElementById('comment');
      const charCount = document.getElementById('char-count');
      charCount.textContent = `${textarea.value.length}/500 characters`;
    }

    async function submitReview(event) {
      event.preventDefault();
      const form = document.getElementById('reviewForm');
      const ratingInputs = document.querySelectorAll('input[name="rating"]:checked');
      const ratingError = document.getElementById('rating-error');

      if (ratingInputs.length === 0) {
        ratingError.style.display = 'block';
        return false;
      }
      ratingError.style.display = 'none';

      try {
        const formData = new FormData(form);
        const response = await fetch('/submit', {
          method: 'POST',
          body: JSON.stringify(Object.fromEntries(formData)),
          headers: { 'Content-Type': 'application/json' }
        });
        const result = await response.json();

        if (result.success) {
          const reviewsList = document.querySelector('.reviews-list');
          const noReviews = reviewsList.querySelector('p');
          if (noReviews) noReviews.remove();

          const reviewDiv = document.createElement('div');
          reviewDiv.className = 'review';
          reviewDiv.innerHTML = `
          <div class="review-header">
            <div class="user-info">
              <span class="user-name">${result.review.user.firstName} ${result.review.user.lastName}</span>
              <div class="review-rating">
                ${Array.from({ length: 5 }, (_, i) => `
                  <span class="star ${i < result.review.rating ? 'filled' : ''}">★</span>
                `).join('')}
              </div>
            </div>
            <span class="review-date">
              ${new Date(result.review.createdAt).toLocaleString('en-IN', {
            timeZone: 'Asia/Kolkata',
            year: 'numeric',
            month: 'short',
            day: 'numeric',
            hour: '2-digit',
            minute: '2-digit'
          })}
            </span>
          </div>
          <p class="review-comment">${result.review.comment}</p>
        `;
          reviewsList.insertBefore(reviewDiv, reviewsList.firstChild);
          form.reset();
          document.getElementById('char-count').textContent = '0/500 characters';

          // Update average rating
          const response = await fetch(`/api/reviews/average/${'<%= product._id %>'}`);
          const avgResult = await response.json();
          document.querySelector('.average-rating').innerHTML = `
          Average Rating: ${avgResult.average.toFixed(1)} 
          <span class="stars">
            ${Array.from({ length: 5 }, (_, i) => `
              <span class="star ${i < Math.round(avgResult.average) ? 'filled' : ''}">★</span>
            `).join('')}
          </span>
          (${reviewsList.children.length} reviews)
        `;

          alert('Review submitted successfully!');
        } else {
          alert(result.message);
        }
      } catch (error) {
        console.error('Error submitting review:', error);
        alert('Failed to submit review');
      }
      return false;
    }



  </script>
</body>

</html>