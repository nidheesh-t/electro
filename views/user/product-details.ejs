<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title><%= product.productName %> | Your Store</title>
  
  <!-- FontAwesome CDN -->
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" />
  
  <!-- Google Fonts -->
  <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&family=Playfair+Display:wght@700&display=swap" rel="stylesheet">

  <style>
    /* ========== Design System ========== */
    :root {
      /* Colors */
      --primary: #1e918b;
      --primary-light: rgba(30, 145, 139, 0.08);
      --primary-hover: #15736e;
      --secondary: #46698f;
      --secondary-hover: #3a5a7a;
      --success: #28a745;
      --danger: #e63946;
      --warning: #ffc107;
      --light-bg: #f9fafb;
      --card-bg: #ffffff;
      --text-main: #1a1a1a;
      --text-muted: #4c4e4c;
      --border-color: #e5e7eb;
      
      /* Spacing */
      --space-xs: 0.5rem;
      --space-sm: 1rem;
      --space-md: 1.5rem;
      --space-lg: 2rem;
      --space-xl: 3rem;
      
      /* Typography */
      --font-sans: 'Inter', -apple-system, BlinkMacSystemFont, sans-serif;
      --font-serif: 'Playfair Display', serif;
      --text-sm: 0.875rem;
      --text-base: 1rem;
      --text-lg: 1.125rem;
      --text-xl: 1.25rem;
      --text-2xl: 1.5rem;
      --text-3xl: 1.875rem;
      --text-4xl: 2.25rem;
      
      /* Effects */
      --shadow-sm: 0 1px 3px rgba(0, 0, 0, 0.05);
      --shadow-md: 0 4px 12px rgba(0, 0, 0, 0.08);
      --shadow-lg: 0 10px 25px rgba(0, 0, 0, 0.1);
      --border-radius-sm: 8px;
      --border-radius-md: 12px;
      --border-radius-lg: 16px;
      --transition: all 0.25s cubic-bezier(0.4, 0, 0.2, 1);
    }

    /* ========== Base Styles ========== */
    * {
      box-sizing: border-box;
      margin: 0;
      padding: 0;
    }

    body {
      font-family: var(--font-sans);
      background-color: var(--light-bg);
      color: var(--text-main);
      line-height: 1.6;
      -webkit-font-smoothing: antialiased;
    }

    img {
      max-width: 100%;
      height: auto;
      display: block;
    }

    .container {
      max-width: 1280px;
      margin: 0 auto;
      padding: var(--space-md) var(--space-lg);
    }

    /* ========== Breadcrumb ========== */
    .breadcrumb {
      margin-bottom: var(--space-xl);
    }

    .breadcrumb-list {
      display: flex;
      flex-wrap: wrap;
      align-items: center;
      gap: var(--space-xs);
      list-style: none;
      padding: 0;
    }

    .breadcrumb-link {
      color: var(--text-muted);
      font-size: var(--text-sm);
      font-weight: 500;
      text-decoration: none;
      transition: color 0.2s ease;
      position: relative;
    }

    .breadcrumb-link:hover {
      color: var(--primary);
    }

    .breadcrumb-link::after {
      content: '';
      position: absolute;
      bottom: -2px;
      left: 0;
      width: 0;
      height: 1px;
      background-color: var(--primary);
      transition: width 0.3s ease;
    }

    .breadcrumb-link:hover::after {
      width: 100%;
    }

    .breadcrumb-separator {
      color: var(--text-muted);
      opacity: 0.5;
      font-size: 0.75rem;
    }

    .breadcrumb-current {
      color: var(--text-main);
      font-weight: 600;
      font-family: var(--font-serif);
    }

    /* ========== Product Card ========== */
    .product-card {
      display: flex;
      gap: var(--space-xl);
      background-color: var(--card-bg);
      padding: var(--space-xl);
      border-radius: var(--border-radius-lg);
      box-shadow: var(--shadow-md);
      transition: transform 0.3s ease, box-shadow 0.3s ease;
      position: relative;
      overflow: hidden;
    }

    .product-card:hover {
      box-shadow: var(--shadow-lg);
      transform: translateY(-2px);
    }

    .product-card::before {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background: linear-gradient(135deg, var(--primary-light) 0%, rgba(255,255,255,0) 100%);
      pointer-events: none;
    }

    @media (max-width: 992px) {
      .product-card {
        flex-direction: column;
        gap: var(--space-lg);
        padding: var(--space-lg);
      }
    }

    /* ========== Product Gallery ========== */
    .product-gallery {
      flex: 1;
      min-width: 0;
      max-width: 600px;
    }

    .main-image-container {
      position: relative;
      overflow: hidden;
      border-radius: var(--border-radius-md);
      background-color: #f8fafc;
      margin-bottom: var(--space-md);
      aspect-ratio: 1/1;
      box-shadow: var(--shadow-sm);
    }

    .main-image {
      width: 100%;
      height: 100%;
      object-fit: contain;
      transition: transform 0.8s cubic-bezier(0.16, 1, 0.3, 1);
      cursor: zoom-in;
    }

    .thumbnail-container {
      display: flex;
      gap: var(--space-sm);
      padding-bottom: var(--space-xs);
      overflow-x: auto;
      scrollbar-width: thin;
      scrollbar-color: var(--primary) rgba(0, 0, 0, 0.1);
    }

    .thumbnail-container::-webkit-scrollbar {
      height: 4px;
    }

    .thumbnail-container::-webkit-scrollbar-thumb {
      background-color: var(--primary);
      border-radius: 3px;
    }

    .thumbnail {
      width: 80px;
      height: 80px;
      object-fit: cover;
      border-radius: var(--border-radius-sm);
      border: 2px solid transparent;
      cursor: pointer;
      transition: var(--transition);
      flex-shrink: 0;
      background-color: #fff;
    }

    .thumbnail:hover {
      border-color: var(--primary);
      transform: translateY(-4px);
      box-shadow: 0 6px 16px rgba(30, 145, 139, 0.15);
    }

    .thumbnail.active {
      border-color: var(--primary);
      box-shadow: 0 0 0 3px var(--primary-light), 0 4px 12px rgba(30, 145, 139, 0.2);
    }

    /* ========== Product Info ========== */
    .product-info {
      flex: 1;
      min-width: 300px;
      padding: var(--space-sm) 0;
    }

    .product-title {
      font-size: var(--text-3xl);
      font-weight: 700;
      margin-bottom: var(--space-xs);
      line-height: 1.2;
      font-family: var(--font-serif);
    }

    .product-brand {
      display: inline-flex;
      align-items: center;
      color: var(--primary);
      font-weight: 600;
      margin-bottom: var(--space-md);
      padding: var(--space-xs) var(--space-sm);
      background-color: var(--primary-light);
      border-radius: 50px;
      font-size: var(--text-sm);
      letter-spacing: 0.5px;
    }

    .product-brand i {
      margin-right: var(--space-xs);
    }

    .price-container {
      display: flex;
      align-items: center;
      flex-wrap: wrap;
      gap: var(--space-sm);
      margin-bottom: var(--space-md);
    }

    .current-price {
      font-family: var(--font-condensed);
      font-size: var(--text-3xl);
      font-weight: 700;
      color: var(--primary);
      letter-spacing: 0.5px;
    }

    .original-price {
      font-size: var(--text-xl);
      color: var(--text-muted);
      text-decoration: line-through;
    }

    .discount-badge {
      background-color: #fff0f0;
      color: var(--danger);
      padding: var(--space-xs) var(--space-sm);
      border-radius: 50px;
      font-weight: 700;
      font-size: var(--text-sm);
      box-shadow: 0 2px 8px rgba(230, 57, 70, 0.1);
    }

    .product-description {
      line-height: 1.7;
      margin-bottom: var(--space-xl);
      color: var(--text-main);
      font-size: var(--text-lg);
      max-width: 600px;
    }

    /* ========== Action Buttons ========== */
    .action-container {
      display: flex;
      flex-wrap: wrap;
      align-items: center;
      gap: var(--space-sm);
      margin-bottom: var(--space-xl);
    }

    .quantity-selector {
      display: flex;
      align-items: center;
      border: 1px solid var(--border-color);
      border-radius: var(--border-radius-sm);
      overflow: hidden;
      background-color: #f9fafb;
    }

    .quantity-btn {
      width: 44px;
      height: 44px;
      display: flex;
      align-items: center;
      justify-content: center;
      background-color: #ffffff;
      border: none;
      font-size: var(--text-lg);
      cursor: pointer;
      transition: var(--transition);
      color: var(--primary);
    }

    .quantity-btn:hover {
      background-color: #f3f4f6;
      color: var(--primary-hover);
    }

    .quantity-btn:disabled {
      opacity: 0.5;
      cursor: not-allowed;
    }

    .quantity-value {
      width: 60px;
      text-align: center;
      font-weight: 600;
      font-size: var(--text-lg);
      color: var(--text-main);
    }

    .add-to-cart-btn {
      display: flex;
      align-items: center;
      gap: var(--space-xs);
      padding: var(--space-sm) var(--space-lg);
      background-color: var(--secondary);
      color: white;
      border: none;
      border-radius: var(--border-radius-sm);
      font-weight: 600;
      cursor: pointer;
      transition: var(--transition);
      box-shadow: 0 4px 12px rgba(70, 105, 143, 0.2);
      position: relative;
      overflow: hidden;
    }

    .add-to-cart-btn:hover {
      background-color: var(--secondary-hover);
      transform: translateY(-2px);
      box-shadow: 0 6px 16px rgba(58, 90, 122, 0.3);
    }

    .add-to-cart-btn:disabled {
      opacity: 0.7;
      cursor: not-allowed;
    }

    .wishlist-btn {
      width: 48px;
      height: 48px;
      display: flex;
      align-items: center;
      justify-content: center;
      background-color: white;
      border: 1px solid var(--border-color);
      border-radius: 50%;
      cursor: pointer;
      transition: var(--transition);
      box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);
    }

    .wishlist-btn:hover {
      border-color: var(--danger);
      color: var(--danger);
      transform: scale(1.1);
      box-shadow: 0 4px 12px rgba(230, 57, 70, 0.1);
    }

    .wishlist-btn.active {
      color: var(--danger);
      border-color: var(--danger);
      background-color: #fff5f5;
    }

    /* ========== Product Meta ========== */
    .product-meta {
      list-style: none;
      padding: 0;
      margin-top: var(--space-xl);
      border-top: 1px solid #f0f0f0;
      padding-top: var(--space-md);
    }

    .meta-item {
      display: flex;
      align-items: flex-start;
      margin-bottom: var(--space-sm);
    }

    .meta-label {
      font-weight: 600;
      min-width: 120px;
      color: var(--text-muted);
      font-size: var(--text-sm);
    }

    .meta-value {
      display: flex;
      flex-wrap: wrap;
      gap: var(--space-xs);
      align-items: center;
      color: rgb(0, 77, 77);
    }

    .stock-badge {
      padding: var(--space-xs) var(--space-sm);
      border-radius: 50px;
      font-size: var(--text-sm);
      font-weight: 600;
      display: inline-flex;
      align-items: center;
      gap: var(--space-xs);
    }

    .in-stock {
      background-color: #f0f9f2;
      color: var(--success);
    }

    .out-of-stock {
      background-color: #fff0f0;
      color: var(--danger);
    }

    .color-chip {
      display: inline-flex;
      align-items: center;
      padding: var(--space-xs) var(--space-sm);
      border-radius: 50px;
      background-color: #f8f9fa;
      font-size: var(--text-sm);
      font-weight: 500;
      box-shadow: 0 2px 6px rgba(0, 0, 0, 0.03);
      transition: var(--transition);
    }

    .color-chip:hover {
      transform: translateY(-2px);
      box-shadow: 0 4px 10px rgba(0, 0, 0, 0.08);
    }

    .color-swatch {
      display: inline-block;
      width: 14px;
      height: 14px;
      border-radius: 50%;
      margin-right: var(--space-xs);
    }

    .size-chip {
      display: inline-flex;
      align-items: center;
      justify-content: center;
      width: 36px;
      height: 36px;
      border-radius: 50%;
      background-color: #f8f9fa;
      font-size: var(--text-sm);
      font-weight: 600;
      box-shadow: 0 2px 6px rgba(0, 0, 0, 0.03);
      transition: var(--transition);
    }

    .size-chip:hover {
      background-color: var(--primary-light);
      color: var(--primary);
      transform: translateY(-2px);
      box-shadow: 0 4px 10px rgba(30, 145, 139, 0.1);
    }

    /* ========== Responsive Adjustments ========== */
    @media (max-width: 768px) {
      .container {
        padding: var(--space-sm);
      }
      
      .product-title {
        font-size: var(--text-2xl);
      }
      
      .current-price {
        font-size: var(--text-2xl);
      }
      
      .original-price {
        font-size: var(--text-lg);
      }
      
      .action-container {
        flex-direction: column;
        align-items: flex-start;
      }
      
      .quantity-selector {
        margin-bottom: var(--space-sm);
      }

      .thumbnail {
        width: 70px;
        height: 70px;
      }
    }

    /* ========== Animations ========== */
    @keyframes pulse {
      0% { transform: scale(1); }
      50% { transform: scale(1.05); }
      100% { transform: scale(1); }
    }

    .add-to-cart-animate {
      animation: pulse 0.5s ease;
    }

    /* ========== Image Zoom Modal ========== */
    .image-zoom-modal {
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background-color: rgba(0, 0, 0, 0.9);
      display: flex;
      align-items: center;
      justify-content: center;
      z-index: 10000;
      opacity: 0;
      pointer-events: none;
      transition: opacity 0.4s cubic-bezier(0.16, 1, 0.3, 1);
      backdrop-filter: blur(8px);
    }

    .image-zoom-modal.active {
      opacity: 1;
      pointer-events: auto;
    }

    .zoomed-image-container {
      position: relative;
      max-width: 90vw;
      max-height: 90vh;
      display: flex;
      align-items: center;
      justify-content: center;
    }

    .zoomed-image {
      max-width: 100%;
      max-height: 100%;
      object-fit: contain;
      border-radius: var(--border-radius-sm);
      box-shadow: 0 20px 40px rgba(0, 0, 0, 0.3);
    }

    .close-zoom {
      position: absolute;
      top: var(--space-md);
      right: var(--space-md);
      color: white;
      font-size: 2rem;
      cursor: pointer;
      transition: transform 0.3s ease;
      background: rgba(0, 0, 0, 0.5);
      width: 44px;
      height: 44px;
      display: flex;
      align-items: center;
      justify-content: center;
      border-radius: 50%;
      border: none;
    }

    .close-zoom:hover {
      transform: rotate(90deg);
      background: rgba(0, 0, 0, 0.7);
    }

    /* ========== Floating Labels ========== */
    .floating-label {
      position: absolute;
      top: var(--space-md);
      left: var(--space-md);
      background-color: var(--primary);
      color: white;
      padding: var(--space-xs) var(--space-sm);
      border-radius: 50px;
      font-weight: 600;
      font-size: var(--text-sm);
      z-index: 10;
      box-shadow: 0 4px 12px rgba(30, 145, 139, 0.3);
    }
    .reviews-section {
    margin-top: 2rem;
    padding: 1.5rem;
    background: white;
    border-radius: var(--border-radius-md);
    box-shadow: var(--shadow-sm);
  }
  
  .review-form {
    margin-bottom: 2rem;
    padding: 1rem;
    background: var(--primary-light);
    border-radius: var(--border-radius-sm);
  }
  
  .rating-input .stars {
    display: inline-flex;
    direction: rtl; /* Right to left for star selection */
  }
  
  .rating-input input[type="radio"] {
    display: none;
  }
  
  .rating-input label {
    font-size: 1.5rem;
    color: #ccc;
    cursor: pointer;
    transition: color 0.2s;
  }
  
  .rating-input input[type="radio"]:checked ~ label,
  .rating-input label:hover,
  .rating-input label:hover ~ label {
    color: gold;
  }
  
  .review {
    padding: 1rem 0;
    border-top: 1px solid var(--border-color);
  }
  
  .review-header {
    display: flex;
    justify-content: space-between;
    margin-bottom: 0.5rem;
  }
  
  .review-rating .star {
    color: gold;
  }
  
  .review-rating .star.filled {
    color: gold;
  }

    /* ========== Loading State ========== */
    .loading-shimmer {
      background: linear-gradient(to right, #f6f7f8 8%, #e9ecef 18%, #f6f7f8 33%);
      background-size: 800px 104px;
      animation-duration: 1.5s;
      animation-fill-mode: forwards;
      animation-iteration-count: infinite;
      animation-name: shimmer;
      animation-timing-function: linear;
    }

    @keyframes shimmer {
      0% { background-position: -468px 0 }
      100% { background-position: 468px 0 }
    }
  </style>
</head>
<body>
  <div class="container">
    <!-- Breadcrumb Navigation -->
    <nav class="breadcrumb" aria-label="Breadcrumb">
      <ol class="breadcrumb-list">
        <li><a href="/" class="breadcrumb-link">Home</a></li>
        <li class="breadcrumb-separator">/</li>
        <li><a href="/shop" class="breadcrumb-link">Shop</a></li>
        <li class="breadcrumb-separator">/</li>
        <li class="breadcrumb-current"><%= product.productName %></li>
      </ol>
    </nav>

    <!-- Product Card -->
    <div class="product-card">
      <% if (product.productOffer && parseFloat(product.productOffer) > 0) { %>
        <div class="floating-label">
          <%= product.productOffer %>% OFF
        </div>
      <% } %>

      <!-- Product Gallery -->
      <div class="product-gallery">
        <div class="main-image-container">
          <% if (product.productImage?.length) { %>
            <img 
              src="/Uploads/re-image/<%= product.productImage[0] %>" 
              alt="<%= product.productName %>" 
              class="main-image"
              id="product-main-image"
              loading="lazy"
            >
          <% } else { %>
            <img 
              src="/images/default-placeholder.jpg" 
              alt="No image available" 
              class="main-image"
              id="product-main-image"
              loading="lazy"
            >
          <% } %>
        </div>
        
        <div class="thumbnail-container">
          <% product.productImage?.forEach((img, i) => { %>
            <img 
              src="/Uploads/re-image/<%= img %>" 
              alt="Thumbnail <%= i + 1 %>" 
              class="thumbnail <%= i === 0 ? 'active' : '' %>"
              data-full-image="/Uploads/re-image/<%= img %>"
              loading="lazy"
            >
          <% }) %>
        </div>
      </div>

      <!-- Product Information -->
      <div class="product-info">
        <h1 class="product-title"><%= product.productName %></h1>
        <div class="product-brand">
          <i class="fas fa-crown"></i>
          <%= product.brand?.brandName || "Premium Brand" %>
        </div>
        
        <div class="price-container">
          <div class="current-price">₹<%= product.salePrice.toLocaleString() %></div>
          <% if (product.regularPrice > product.salePrice) { %>
            <div class="original-price">₹<%= product.regularPrice.toLocaleString() %></div>
            <div class="discount-badge">
              Save ₹<%= (product.regularPrice - product.salePrice).toLocaleString() %>
            </div>
          <% } %>
            <% if (totalOffer > 0) { %>
              <div class="total-discount" style="background-color: #f0f9f0; color: var(--success); padding: 0.5rem 1rem; border-radius: 50px; font-size: var(--text-sm); font-weight: 600;">
                <i class="fas fa-tag"></i> Total <%= totalOffer %>% OFF
              </div>
            <% } %>
        </div>
        
        <div class="product-description">
          <p><%= product.description || "This premium product comes with exceptional quality and craftsmanship." %></p>
          <% if (product.brandOffer) { %>
            <div style="margin-top: 1rem; padding: 0.75rem; background-color: #fff9e6; border-radius: 8px; border-left: 4px solid var(--warning);">
              <strong>Brand Offer:</strong> <%= product.brandOffer %>
            </div>
          <% } %>
        </div>
                  <li class="meta-item">
            <span class="meta-label">Colors:</span>
            <span class="meta-value">
              <% if (colors && colors?.length) { %>
                <% colors.forEach(color => { %>
                  <span class="color-chip">
                    <!-- <span class="color-swatch"></span> -->
                    <%= color %>
                  </span>
                <% }) %>
              <% } else { %>
                <span>Premium Colors</span>
              <% } %>
            </span>
          </li>
          <li class="meta-item">
            <span class="meta-label">Sizes:</span>
            <span class="meta-value">
              <% if (sizes?.length) { %>
                <% sizes.forEach(size => { %>
                  <span class="size-chip"><%= size %></span>
                <% }) %>
              <% } else { %>
                <span>Standard Size</span>
              <% } %>
            </span>
          </li>
        
        <div class="action-container">
          <div class="quantity-selector">
            <button class="quantity-btn minus" aria-label="Decrease quantity">−</button>
            <span class="quantity-value">1</span>
            <button class="quantity-btn plus" aria-label="Increase quantity">+</button>
          </div>
          
          <button class="add-to-cart-btn" id="add-to-cart" aria-label="Add to cart">
            <i class="fas fa-shopping-cart"></i> Add to Cart
          </button>
          
          <button class="wishlist-btn" id="wishlist-btn" aria-label="Add to wishlist">
            <i class="far fa-heart"></i>
          </button>
        </div>
        
        <ul class="product-meta">
          <li class="meta-item">
            <span class="meta-label">Availability:</span>
            <span class="meta-value">
              <% if (product.quantity > 0) { %>
                <span class="stock-badge in-stock">
                  <i class="fas fa-check-circle"></i> In Stock (<%= product.quantity %> available)
                </span>
              <% } else { %>
                <button class="add-to-cart-btn" style="background-color: #f0f0f0; color: #666; cursor: not-allowed;" disabled>
                      <i class="fas fa-times-circle"></i> Out of Stock
                    </button>
                    <button class="notify-btn" style="background-color: var(--warning); color: white;">
                      <i class="fas fa-bell"></i> Notify When Available
                    </button>
              <% } %>
            </span>
          </li>
          <li class="meta-item">
            <span class="meta-label">Category:</span>
            <span class="meta-value">
              <span style="background-color: #f0f7ff; padding: 0.5rem 1rem; border-radius: 50px;">
                <i class="fas fa-tag"></i> <%= product.category?.categoryName || "Premium" %>
              </span>
            </span>
          </li>
        </ul>
      </div>
    </div>
<!-- Reviews Section -->
<section class="reviews-section">
  <h2>Customer Reviews</h2>
  
  <!-- Review Form (only for logged in users) -->
  <% if (user) { %>
    <div class="review-form">
      <h3>Write a Review</h3>
      <form id="reviewForm">
        <input type="hidden" name="productId" value="<%= product._id %>">
        
        <div class="rating-input">
          <label>Rating:</label>
          <div class="stars">
            <% for (let i=5; i>=1; i--) { %>
              <input type="radio" id="star<%= i %>" name="rating" value="<%= i %>" <%= i === 3 ? 'checked' : '' %>>
              <label for="star<%= i %>">★</label>
            <% } %>
          </div>
        </div>
        
        <div class="form-group">
          <label for="comment">Your Review:</label>
          <textarea name="comment" id="comment" rows="4" required></textarea>
        </div>
        
        <button type="submit" class="submit-btn">Submit Review</button>
      </form>
    </div>
  <% } else { %>
    <p>Please <a href="/login">login</a> to write a review.</p>
  <% } %>
  
  <!-- Reviews List -->
  <div class="reviews-list">
    <% if (reviews.length > 0) { %>
      <% reviews.forEach(review => { %>
        <div class="review">
          <div class="review-header">
            <div class="user-info">
              <span class="user-name"><%= review.user.name %></span>
              <div class="review-rating">
                <% for (let i=1; i<=5; i++) { %>
                  <span class="star <%= i <= review.rating ? 'filled' : '' %>">★</span>
                <% } %>
              </div>
            </div>
            <span class="review-date">
              <%= new Date(review.createdAt).toLocaleDateString() %>
            </span>
          </div>
          <p class="review-comment"><%= review.comment %></p>
        </div>
      <% }) %>
    <% } else { %>
      <p>No reviews yet. Be the first to review!</p>
    <% } %>
  </div>
</section>

<!-- Product Specs/Highlights -->
<section class="product-specs" style="margin: 2rem 0; padding: 1.5rem; background: white; border-radius: var(--border-radius-md); box-shadow: var(--shadow-sm);">
  <h2 style="font-family: var(--font-serif); margin-bottom: 1rem;">Product Highlights</h2>
  <ul style="list-style-type: none; padding: 0;">
    <% if(specs.length > 0) { %>
      <% specs.forEach(spec => { %>
        <li style="padding: 0.5rem 0; display: flex;">
          <span style="font-weight: 600; min-width: 150px;"><%= spec.key %>:</span>
          <span><%= spec.value %></span>
        </li>
      <% }) %>
    <% } else { %>
      <li><%= product.description %></li>
    <% } %>
  </ul>
</section>



<% if (relatedProducts?.length) { %>
  <section class="related-products" style="margin-top: 3rem;">
    <h2 style="font-family: var(--font-serif); margin-bottom: 1.5rem;">You may also like</h2>
    <div class="related-grid" style="display: grid; grid-template-columns: repeat(auto-fill, minmax(250px, 1fr)); gap: 1.5rem;">
      <% relatedProducts.forEach(prod => { %>
        <div class="related-card" style="background: white; border-radius: var(--border-radius-md); padding: 1rem; box-shadow: var(--shadow-sm); transition: var(--transition);">
          <a href="/productDetails/<%= prod._id %>" style="text-decoration: none; color: inherit;">
            <img src="/Uploads/re-image/<%= prod.productImage[0] %>" alt="<%= prod.productName %>" 
                 style="width: 100%; aspect-ratio: 1/1; object-fit: contain; margin-bottom: 1rem; border-radius: var(--border-radius-sm);">
            <h3 style="font-size: 1.1rem; margin-bottom: 0.5rem;"><%= prod.productName %></h3>
            <div style="display: flex; gap: 0.5rem; align-items: center;">
              <span style="font-weight: 700; color: var(--primary);">₹<%= prod.salePrice.toLocaleString() %></span>
              <% if (prod.regularPrice > prod.salePrice) { %>
                <span style="text-decoration: line-through; color: var(--text-muted); font-size: 0.9rem;">
                  ₹<%= prod.regularPrice.toLocaleString() %>
                </span>
              <% } %>
            </div>
          </a>
        </div>
      <% }) %>
    </div>
  </section>
<% } %>    
  </div>

  <!-- Image Zoom Modal -->
  <div class="image-zoom-modal" id="imageZoomModal">
    <button class="close-zoom" aria-label="Close zoomed image">&times;</button>
    <div class="zoomed-image-container">
      <img src="" alt="Zoomed product image" class="zoomed-image" id="zoomedImage">
    </div>
  </div>

  <script>
    document.addEventListener('DOMContentLoaded', function() {
      // DOM Elements
      const thumbnails = document.querySelectorAll('.thumbnail');
      const mainImage = document.getElementById('product-main-image');
      const zoomModal = document.getElementById('imageZoomModal');
      const zoomedImage = document.getElementById('zoomedImage');
      const closeZoomBtn = document.querySelector('.close-zoom');
      
      const minusBtn = document.querySelector('.quantity-btn.minus');
      const plusBtn = document.querySelector('.quantity-btn.plus');
      const quantityValue = document.querySelector('.quantity-value');
      const addToCartBtn = document.getElementById('add-to-cart');
      const wishlistBtn = document.getElementById('wishlist-btn');
      
      // State
      let currentQty = 1;
      const maxQty = '<%= product.quantity || 10 %>';
      let isWishlisted = false;

      // Initialize
      updateQuantityButtons();
      checkWishlistStatus();

      // Thumbnail Click Handler
      thumbnails.forEach(thumb => {
        thumb.addEventListener('click', function() {
          const newSrc = this.dataset.fullImage;
          const newAlt = this.alt.replace('thumbnail', 'main image');
          
          // Smooth transition effect
          mainImage.style.opacity = 0;
          setTimeout(() => {
            mainImage.src = newSrc;
            mainImage.alt = newAlt;
            mainImage.style.opacity = 1;
          }, 200);
          
          // Update active thumbnail
          thumbnails.forEach(t => t.classList.remove('active'));
          this.classList.add('active');
        });
        
        // Keyboard accessibility
        thumb.addEventListener('keydown', e => {
          if (e.key === 'Enter' || e.key === ' ') {
            e.preventDefault();
            thumb.click();
          }
        });
      });

      // Quantity Controls
      function updateQuantityButtons() {
        minusBtn.disabled = currentQty <= 1;
        plusBtn.disabled = currentQty >= maxQty;
        quantityValue.textContent = currentQty;
      }

      minusBtn.addEventListener('click', () => {
        if (currentQty > 1) {
          currentQty--;
          updateQuantityButtons();
          animateQuantityChange();
        } else {
          // Haptic feedback
          minusBtn.style.transform = 'translateX(-4px)';
          setTimeout(() => minusBtn.style.transform = '', 300);
        }
      });

      plusBtn.addEventListener('click', () => {
        if (currentQty < maxQty) {
          currentQty++;
          updateQuantityButtons();
          animateQuantityChange();
        } else {
          // Haptic feedback
          plusBtn.style.transform = 'translateX(4px)';
          setTimeout(() => plusBtn.style.transform = '', 300);
        }
      });

      function animateQuantityChange() {
        quantityValue.style.transform = 'scale(1.2)';
        quantityValue.style.color = 'var(--primary)';
        setTimeout(() => {
          quantityValue.style.transform = '';
          quantityValue.style.color = '';
        }, 300);
      }

      // Add to Cart
      addToCartBtn.addEventListener('click', async function() {
          if ('<%= product.quantity %>' <= 0) {
            showErrorNotification('This product is currently out of stock');
            return;
          }
        // Disable button during processing
        this.disabled = true;
        const originalText = this.innerHTML;
        this.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Adding...';
        
        try {
          const response = await fetch('/cart/add', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json'
            },
            body: JSON.stringify({
              productId: '<%= product._id %>',
              quantity: currentQty
            })
          });
          
          const result = await response.json();
          
          if (result.success) {
            // Success feedback
            showSuccessNotification();
            
            // Update cart count in header
            if (result.cartCount) {
              updateCartCount(result.cartCount);
            }
          } else {
            showErrorNotification(result.message || 'Could not add to cart');
          }
        } catch (error) {
          showErrorNotification('Failed to add to cart. Please try again.');
        } finally {
          // Re-enable button
          this.disabled = false;
          this.innerHTML = originalText;
          this.classList.add('add-to-cart-animate');
          setTimeout(() => this.classList.remove('add-to-cart-animate'), 500);
        }
      });

      function showSuccessNotification() {
        // Create notification element
        const notification = document.createElement('div');
        notification.className = 'cart-notification';
        notification.innerHTML = `
          <div style="
            position: fixed;
            bottom: 20px;
            right: 20px;
            background: white;
            padding: 1rem 1.5rem;
            border-radius: 8px;
            box-shadow: 0 4px 12px rgba(0,0,0,0.15);
            display: flex;
            align-items: center;
            gap: 0.75rem;
            z-index: 1000;
            animation: slideIn 0.3s ease-out;
          ">
            <i class="fas fa-check-circle" style="color: var(--success); font-size: 1.5rem;"></i>
            <div>
              <h4 style="margin: 0 0 0.25rem; font-size: 1rem;">Added to Cart</h4>
              <p style="margin: 0; font-size: 0.9rem; color: var(--text-muted);">
                ${currentQty} ${currentQty > 1 ? 'items' : 'item'} of <%= product.productName %>
              </p>
            </div>
          </div>
        `;
        
        document.body.appendChild(notification);
        
        // Remove after 3 seconds
        setTimeout(() => {
          notification.style.animation = 'slideOut 0.3s ease-in';
          setTimeout(() => notification.remove(), 300);
        }, 3000);
      }

      function showErrorNotification(message) {
        // Create error notification
        const notification = document.createElement('div');
        notification.className = 'error-notification';
        notification.innerHTML = `
          <div style="
            position: fixed;
            bottom: 20px;
            right: 20px;
            background: #fff0f0;
            padding: 1rem 1.5rem;
            border-radius: 8px;
            box-shadow: 0 4px 12px rgba(0,0,0,0.15);
            display: flex;
            align-items: center;
            gap: 0.75rem;
            z-index: 1000;
            animation: slideIn 0.3s ease-out;
            border-left: 4px solid var(--danger);
          ">
            <i class="fas fa-exclamation-circle" style="color: var(--danger); font-size: 1.5rem;"></i>
            <div>
              <h4 style="margin: 0 0 0.25rem; font-size: 1rem;">Error</h4>
              <p style="margin: 0; font-size: 0.9rem; color: var(--danger);">
                ${message}
              </p>
            </div>
          </div>
        `;
        
        document.body.appendChild(notification);
        
        // Remove after 3 seconds
        setTimeout(() => {
          notification.style.animation = 'slideOut 0.3s ease-in';
          setTimeout(() => notification.remove(), 300);
        }, 3000);
      }

      function updateCartCount(count) {
        const cartCountElements = document.querySelectorAll('.cart-count');
        cartCountElements.forEach(el => {
          el.textContent = count;
          el.style.transform = 'scale(1.5)';
          setTimeout(() => el.style.transform = '', 500);
        });
      }

      // Wishlist Toggle
      wishlistBtn.addEventListener('click', async function() {
        const icon = this.querySelector('i');
        isWishlisted = !isWishlisted;
        
        // Visual feedback
        if (isWishlisted) {
          this.classList.add('active');
          icon.classList.replace('far', 'fas');
          this.style.boxShadow = '0 0 0 8px rgba(230, 57, 70, 0.2)';
          icon.style.transform = 'scale(1.3)';
          setTimeout(() => icon.style.transform = '', 300);
        } else {
          this.classList.remove('active');
          icon.classList.replace('fas', 'far');
          this.style.boxShadow = '';
        }
        
        // API call
        try {
          const endpoint = isWishlisted ? '/wishlist/add' : '/wishlist/remove';
          await fetch(`${endpoint}/<%= product._id %>`, { 
            method: 'POST',
            headers: {
              'Content-Type': 'application/json'
            },
          });
        } catch (error) {
          console.error('Wishlist error:', error);
          // Revert visual state if API call fails
          isWishlisted = !isWishlisted;
          if (isWishlisted) {
            this.classList.add('active');
            icon.classList.replace('far', 'fas');
          } else {
            this.classList.remove('active');
            icon.classList.replace('fas', 'far');
          }
        }
      });

      async function checkWishlistStatus() {
        try {
          const response = await fetch('/wishlist/check/<%= product._id %>');
          const data = await response.json();
          
          if (data.isInWishlist) {
            isWishlisted = true;
            wishlistBtn.classList.add('active');
            const icon = wishlistBtn.querySelector('i');
            icon.classList.replace('far', 'fas');
          }
        } catch (error) {
          console.error('Error checking wishlist status:', error);
        }
      }

      // Image Zoom Functionality
      function openZoom() {
        zoomedImage.src = mainImage.src;
        zoomedImage.alt = mainImage.alt;
        zoomModal.classList.add('active');
        document.body.style.overflow = 'hidden';
        closeZoomBtn.focus();
      }

      function closeZoom() {
        zoomModal.classList.remove('active');
        document.body.style.overflow = '';
        mainImage.focus();
      }

      mainImage.addEventListener('click', openZoom);
      mainImage.addEventListener('keydown', e => {
        if (e.key === 'Enter' || e.key === ' ') {
          e.preventDefault();
          openZoom();
        }
      });

      closeZoomBtn.addEventListener('click', closeZoom);
      zoomModal.addEventListener('click', e => {
        if (e.target === zoomModal) closeZoom();
      });

      // Keyboard accessibility
      document.addEventListener('keydown', e => {
        if (e.key === 'Escape' && zoomModal.classList.contains('active')) {
          closeZoom();
        }
      });

      // Add CSS for notifications
      const style = document.createElement('style');
      style.textContent = `
        @keyframes slideIn {
          from { transform: translateX(100%); opacity: 0; }
          to { transform: translateX(0); opacity: 1; }
        }
        @keyframes slideOut {
          from { transform: translateX(0); opacity: 1; }
          to { transform: translateX(100%); opacity: 0; }
        }
      `;
      document.head.appendChild(style);
    });

    document.getElementById('reviewForm').addEventListener('submit', async function(e) {
    e.preventDefault();
    
    const formData = new FormData(this);
    const submitBtn = this.querySelector('button[type="submit"]');
    const originalBtnText = submitBtn.textContent;
    
    try {
      submitBtn.disabled = true;
      submitBtn.textContent = 'Submitting...';
      
      const response = await fetch('/reviews/submit', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({
          productId: formData.get('productId'),
          rating: formData.get('rating'),
          comment: formData.get('comment')
        })
      });
      
      const result = await response.json();
      
      if (result.success) {
        // Add the new review to the page without reload
        const reviewsList = document.querySelector('.reviews-list');
        
        if (reviewsList.querySelector('p')) {
          reviewsList.innerHTML = ''; // Remove "no reviews" message
        }
        
        const reviewDate = new Date(result.review.createdAt).toLocaleDateString();
        
        reviewsList.insertAdjacentHTML('afterbegin', `
          <div class="review">
            <div class="review-header">
              <div class="user-info">
                <span class="user-name">${result.review.user.name}</span>
                <div class="review-rating">
                  ${'★'.repeat(result.review.rating) + '☆'.repeat(5 - result.review.rating)}
                </div>
              </div>
              <span class="review-date">${reviewDate}</span>
            </div>
            <p class="review-comment">${result.review.comment}</p>
          </div>
        `);
        
        // Reset form
        this.reset();
        showNotification('Review submitted successfully!', 'success');
      } else {
        showNotification(result.message || 'Failed to submit review', 'error');
      }
    } catch (error) {
      showNotification('An error occurred. Please try again.', 'error');
      console.error('Error:', error);
    } finally {
      submitBtn.disabled = false;
      submitBtn.textContent = originalBtnText;
    }
  });
  
  function showNotification(message, type) {
    const notification = document.createElement('div');
    notification.className = `notification ${type}`;
    notification.textContent = message;
    
    document.body.appendChild(notification);
    
    setTimeout(() => {
      notification.classList.add('fade-out');
      setTimeout(() => notification.remove(), 300);
    }, 3000);
  }
  </script>
</body>
</html>