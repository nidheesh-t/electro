<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>OTP Verification</title>
    <!-- jQuery CDN -->
    <script src="https://code.jquery.com/jquery-3.7.1.min.js"></script>
    <!-- SweetAlert2 CDN -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css">
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <!-- Google Fonts -->
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600&display=swap" rel="stylesheet">

    <style>
        :root {
            --primary-color: #4361ee;
            --primary-light: #e0e7ff;
            --secondary-color: #3f37c9;
            --text-color: #2b2d42;
            --light-text: #8d99ae;
            --error-color: #ef233c;
            --success-color: #4cc9f0;
            --white: #ffffff;
            --light-bg: #f8f9fa;
            --border-radius: 12px;
            --box-shadow: 0 10px 30px rgba(0, 0, 0, 0.08);
            --transition: all 0.3s ease;
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
            display: flex;
            justify-content: center;
            align-items: center;
            min-height: 100vh;
            margin: 0;
            background: linear-gradient(rgba(0, 0, 0, 0.7), rgba(0, 0, 0, 0.7)), url('https://images.unsplash.com/photo-1600585154340-be6161a56a0c?ixlib=rb-4.0.3&auto=format&fit=crop&w=1920&q=80') no-repeat center center fixed;
            background-size: cover;
        }

        .container {
            background-color: var(--white);
            padding: 2.5rem 3rem;
            border-radius: var(--border-radius);
            box-shadow: var(--box-shadow);
            text-align: center;
            width: 100%;
            max-width: 500px;
            margin: 1rem;
            transition: var(--transition);
        }

        .logo {
            width: 60px;
            height: 60px;
            margin: 0 auto 1.5rem;
            display: flex;
            align-items: center;
            justify-content: center;
            background-color: var(--primary-light);
            border-radius: 50%;
            color: var(--primary-color);
            font-size: 1.8rem;
            font-weight: 600;
        }

        h1 {
            margin-bottom: 0.75rem;
            color: var(--text-color);
            font-size: 1.8rem;
            font-weight: 600;
        }

        .subtitle {
            font-size: 1rem;
            color: var(--light-text);
            margin-bottom: 2rem;
            font-weight: 400;
        }

        .otp-input-container {
            margin: 2rem 0;
        }

        .otp-input {
            display: flex;
            justify-content: center;
            gap: 15px;
        }

        .otp-input input {
            width: 60px;
            height: 60px;
            text-align: center;
            font-size: 1.5rem;
            font-weight: 500;
            border: 2px solid var(--primary-light);
            border-radius: var(--border-radius);
            background-color: var(--white);
            color: var(--text-color);
            transition: var(--transition);
            outline: none;
            /* Remove number input arrows */
            -moz-appearance: textfield;
        }

        /* Remove arrows in Chrome, Safari, Edge, Opera */
        .otp-input input::-webkit-outer-spin-button,
        .otp-input input::-webkit-inner-spin-button {
            -webkit-appearance: none;
            margin: 0;
        }

        .otp-input input:focus {
            border-color: var(--primary-color);
            box-shadow: 0 0 0 4px rgba(67, 97, 238, 0.15);
            transform: translateY(-2px);
        }

        .otp-input input.filled {
            border-color: var(--primary-color);
            background-color: var(--primary-light);
        }

        .timer {
            font-size: 1rem;
            margin: 1.5rem 0;
            color: var(--error-color);
            font-weight: 500;
        }

        .button-group {
            display: flex;
            flex-direction: column;
            gap: 1rem;
            margin-top: 2rem;
        }

        .btn {
            background-color: var(--primary-color);
            color: var(--white);
            border: none;
            padding: 1rem;
            font-size: 1rem;
            font-weight: 500;
            border-radius: var(--border-radius);
            cursor: pointer;
            transition: var(--transition);
            width: 100%;
        }

        .btn:hover {
            background-color: var(--secondary-color);
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(67, 97, 238, 0.3);
        }

        .btn:active {
            transform: translateY(0);
        }

        .btn:disabled {
            background-color: #e9ecef;
            color: #adb5bd;
            cursor: not-allowed;
            transform: none;
            box-shadow: none;
        }

        .btn-outline {
            background-color: transparent;
            color: var(--primary-color);
            border: 2px solid var(--primary-light);
        }

        .btn-outline:hover {
            background-color: var(--primary-light);
            color: var(--secondary-color);
            box-shadow: none;
        }

        .resend-text {
            font-size: 0.9rem;
            color: var(--light-text);
            margin: 1rem 0;
        }

        .login-link {
            margin-top: 2rem;
            font-size: 0.95rem;
            color: var(--light-text);
        }

        .login-link a {
            color: var(--primary-color);
            text-decoration: none;
            font-weight: 500;
            transition: var(--transition);
        }

        .login-link a:hover {
            text-decoration: underline;
            color: var(--secondary-color);
        }

        /* Responsive adjustments */
        @media (max-width: 480px) {
            .container {
                padding: 2rem 1.5rem;
            }

            h1 {
                font-size: 1.6rem;
            }

            .otp-input input {
                width: 50px;
                height: 50px;
                font-size: 1.3rem;
            }

            .btn {
                padding: 0.9rem;
            }
        }

        /* Animation for OTP inputs */
        @keyframes pulse {
            0% {
                transform: scale(1);
            }

            50% {
                transform: scale(1.05);
            }

            100% {
                transform: scale(1);
            }
        }

        .otp-input input:focus {
            animation: pulse 1.5s infinite;
        }
    </style>
</head>

<body>
    <div class="container">
        <div class="logo">
            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none"
                stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                <path
                    d="M22 16.92v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z">
                </path>
            </svg>
        </div>

        <h1>Verify Your Account</h1>
        <p class="subtitle">We've sent a 6-digit code to your email</p>

        <div class="otp-input-container">
            <div class="otp-input">
                <input type="number" min="0" max="9" required autofocus>
                <input type="number" min="0" max="9" required>
                <input type="number" min="0" max="9" required>
                <input type="number" min="0" max="9" required>
                <input type="number" min="0" max="9" required>
                <input type="number" min="0" max="9" required>
            </div>
            <div class="timer" id="timer">Time remaining: 1:00</div>
        </div>

        <form id="otpForm" action="/verify-change-pass-otp" method="post" onsubmit="return verifyOTP()">
            <div class="button-group">
                <button type="submit" class="btn">Verify Code</button>
                <p class="resend-text">Didn't receive the code?<br>Request a new one after timer expires.</p>
                <button id="resendButton" type="button" onclick="resendOTP()" disabled class="btn btn-outline">Resend
                    Code</button>
            </div>
        </form>

        <div class="login-link">
            Already verified? <a href="/login">Sign In</a>
        </div>
    </div>

    <script>
        const inputs = document.querySelectorAll('.otp-input input');
        const timerDisplay = document.getElementById('timer');
        const resendButton = document.getElementById('resendButton');
        let timeLeft = 60; // 1 minute in seconds
        let timerId;

        function startTimer() {
            timerId = setInterval(() => {
                if (timeLeft <= 0) {
                    clearInterval(timerId);
                    timerDisplay.textContent = "Code expired";
                    resendButton.disabled = false;
                    inputs.forEach(input => input.disabled = true);
                } else {
                    const minutes = Math.floor(timeLeft / 60);
                    const seconds = timeLeft % 60;
                    timerDisplay.textContent = `Time remaining: ${minutes}:${seconds.toString().padStart(2, '0')}`;
                    timeLeft--;
                }
            }, 1000);
        }

        function resendOTP() {
            // Here you would typically call your backend to resend the OTP
            timeLeft = 60;
            inputs.forEach(input => {
                input.value = '';
                input.disabled = false;
            });
            resendButton.disabled = true;
            inputs[0].focus();
            clearInterval(timerId);
            startTimer();

            $.ajax({
                type: "POST",
                url: "/resend-forgot-otp",
                success: function (response) {
                    if (response.success) {
                        Swal.fire({
                            icon: "success",
                            title: "New Code Sent!",
                            text: "Check your email for the new verification code",
                            showConfirmButton: false,
                            timer: 1500
                        })
                    } else {
                        Swal.fire({
                            icon: "error",
                            title: "Resend OTP Failed",
                            text: "An error occured while resending OTP, Please try again",
                            confirmButtonColor: "var(--primary-color)"
                        });
                    }
                }
            })
        }

        inputs.forEach((input, index) => {
            input.addEventListener('input', (e) => {
                if (e.target.value.length > 1) {
                    e.target.value = e.target.value.slice(0, 1);
                }
                if (e.target.value.length === 1) {
                    if (index < inputs.length - 1) {
                        inputs[index + 1].focus();
                    }
                }
            });

            input.addEventListener('keydown', (e) => {
                if (e.key === 'Backspace' && !e.target.value) {
                    if (index > 0) {
                        inputs[index - 1].focus();
                    }
                }
                if (e.key === 'e') {
                    e.preventDefault();
                }
            });
        });

        startTimer();

        function verifyOTP() {
            const otp = Array.from(inputs).map(input => input.value).join('');

            // Client-side validation
            if (otp.length !== 6) {
                Swal.fire({
                    icon: "error",
                    title: "Incomplete Code",
                    text: "Please enter all 6 digits",
                    confirmButtonColor: "var(--primary-color)"
                });
                return false;
            }

            if (timeLeft <= 0) {
                Swal.fire({
                    icon: "error",
                    title: "Code Expired",
                    text: "Please request a new verification code",
                    confirmButtonColor: "var(--primary-color)"
                });
                return false;
            }

            // Server-side verification
            $.ajax({
                type: "POST",
                url: "verify-change-pass-otp",
                data: { otp: otp },
                success: function (response) {
                    if (response.success) {
                        Swal.fire({
                            icon: "success",
                            title: "Verification Successful!",
                            text: "You're being redirected to your account",
                            showConfirmButton: false,
                            timer: 1500
                        }).then(() => {
                            window.location.href = response.redirectUrl;
                        });
                    } else {
                        Swal.fire({
                            icon: "error",
                            title: "Verification Failed",
                            text: "The code you entered is incorrect",
                            confirmButtonColor: "var(--primary-color)"
                        });
                    }
                },
                error: function () {
                    Swal.fire({
                        icon: "error",
                        title: "Network Error",
                        text: "Could not verify code. Please check your connection and try again",
                        confirmButtonColor: "var(--primary-color)"
                    });
                }
            });

            return false; // Prevent form submission if called from form
        }
    </script>
</body>

</html>
